@use '@lucca-front/scss/src/commons/utils/namespace';

@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/components/button/exports' as button;

@mixin component($atRoot: namespace.$defaultAtRoot) {
	position: relative;
	border: 1px var(--components-fileUpload-borderStyle) var(--components-fileUpload-borderColor);
	overflow: hidden;
	border-radius: var(--commons-borderRadius-L);
	background-color: var(--components-fileUpload-backgroundColor);
	padding: var(--components-fileUpload-padding);
	text-align: var(--components-fileUpload-textAlign);
	display: var(--components-fileUpload-display);
	flex-direction: var(--components-fileUpload-flexDirection);
	align-items: var(--components-fileUpload-alignItems);
	justify-content: var(--components-fileUpload-justifyContent);
	gap: var(--pr-t-spacings-200);
	color: var(--palettes-neutral-800);
<<<<<<< Updated upstream
	min-height: var(--components-fileUpload-minHeight);
=======
	min-block-size: var(--components-fileUpload-minHeight);
>>>>>>> Stashed changes

	&:has(.fileUpload-input:focus-visible) {
		@include a11y.focusVisible;
	}

	@at-root ($atRoot) {
		.fileUpload-status {
<<<<<<< Updated upstream
			min-width: var(--pr-t-spacings-600);
			min-height: var(--components-fileUpload-status-minHeight);
=======
			min-inline-size: var(--pr-t-spacings-600);
			min-block-size: var(--components-fileUpload-status-minHeight);
>>>>>>> Stashed changes
			display: flex;
			align-items: center;
			justify-content: center;
			position: var(--components-fileUpload-status-position);
		}

		.fileUpload-status-image {
			position: absolute;
			inset: var(--components-fileUpload-status-image-inset);
			width: var(--components-fileUpload-status-image-size);
			height: var(--components-fileUpload-status-image-size);
			object-fit: cover;
			border-radius: var(--commons-borderRadius-M);
			opacity: 0.5;
		}

		.fileUpload-input {
			position: absolute;
			inset: calc(var(--pr-t-spacings-400) * -1) 0 0;
			opacity: 0.0001;
			cursor: pointer;
			z-index: 1;
		}

		.fileUpload-instruction {
			display: var(--components-fileUpload-instruction-display);
			flex-direction: column;
			align-items: var(--components-fileUpload-instruction-alignItems);
<<<<<<< Updated upstream
			max-width: var(--components-fileUpload-instruction-maxWidth);
=======
			max-inline-size: var(--components-fileUpload-instruction-maxWidth);
>>>>>>> Stashed changes
		}

		.fileUpload-instruction-action {
			display: block;
		}

		.fileUpload-instruction-action-click {
			color: var(--components-fileUpload-instruction-action-color);
			font-weight: var(--components-fileUpload-instruction-action-fontWeight);
		}

		.fileUpload-instruction-size,
		.fileUpload-instruction-formats {
			color: var(--palettes-neutral-600);
			font-size: var(--sizes-S-fontSize);
			line-height: var(--sizes-S-lineHeight);
		}

		.fileUpload-button {
			visibility: var(--components-fileUpload-button-visibility);
			display: var(--components-fileUpload-button-display);
		}

		.fileUpload-instruction-filename {
			display: block;
			font-weight: 600;
			color: var(--components-fileUpload-instruction-filename-color);
<<<<<<< Updated upstream
			margin-top: var(--components-fileUpload-instruction-filename-marginTop);
			bottom: var(--pr-t-spacings-100);
=======
			margin-block-start: var(--components-fileUpload-instruction-filename-marginTop);
			inset-block-end: var(--pr-t-spacings-100);
>>>>>>> Stashed changes
			position: var(--components-fileUpload-instruction-filename-position);
		}
	}
}
