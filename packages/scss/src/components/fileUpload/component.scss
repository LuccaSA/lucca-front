@use '@lucca-front/scss/src/commons/utils/namespace';

@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/components/button/exports' as button;

@mixin component($atRoot: namespace.$defaultAtRoot) {
	position: relative;
	border: 1px var(--components-fileUpload-borderStyle) var(--components-fileUpload-borderColor);
	overflow: hidden;
	border-radius: var(--commons-borderRadius-L);
	background-color: var(--components-fileUpload-backgroundColor);
	padding: var(--components-fileUpload-padding);
	text-align: var(--components-fileUpload-textAlign);
	display: var(--components-fileUpload-display);
	flex-direction: var(--components-fileUpload-flexDirection);
	align-items: var(--components-fileUpload-alignItems);
	justify-content: var(--components-fileUpload-justifyContent);
	gap: var(--pr-t-spacings-200);
	color: var(--palettes-neutral-800);
	min-height: var(--components-fileUpload-minHeight);

	&:has(.fileUpload-input:focus-visible) {
		@include a11y.focusVisible;
	}

	@at-root ($atRoot) {
		.fileUpload-status {
			min-width: var(--pr-t-spacings-600);
			min-height: var(--components-fileUpload-status-minHeight);
			display: flex;
		}

		.fileUpload-input {
			position: absolute;
			inset: calc(var(--pr-t-spacings-400) * -1) 0 0;
			opacity: 0.0001;
			cursor: pointer;
			z-index: 1;
		}

		.fileUpload-instruction {
			display: var(--components-fileUpload-instruction-display);
			flex-direction: column;
			align-items: var(--components-fileUpload-instruction-alignItems);
			max-width: var(--components-fileUpload-instruction-maxWidth);
		}

		.fileUpload-instruction-action {
			display: block;
		}

		.fileUpload-instruction-action-click {
			color: var(--components-fileUpload-instruction-action-color);
			font-weight: var(--components-fileUpload-instruction-action-fontWeight);
		}

		.fileUpload-instruction-size,
		.fileUpload-instruction-formats {
			color: var(--palettes-neutral-600);
			font-size: var(--sizes-S-fontSize);
			line-height: var(--sizes-S-lineHeight);
		}

		.fileUpload-button {
			visibility: var(--components-fileUpload-button-visibility);
			display: var(--components-fileUpload-button-display);
		}

		.fileUpload-instruction-filename {
			display: block;
			font-weight: 600;
			color: var(--components-fileUpload-instruction-filename-color);
			margin-top: var(--components-fileUpload-instruction-filename-marginTop);
			bottom: var(--pr-t-spacings-100);
			position: var(--components-fileUpload-instruction-filename-position);
		}

		.fileUpload_file {
			border: 1px solid var(--palettes-neutral-100);
			padding: var(--pr-t-spacings-75); // TODO
			border-radius: var(--commons-borderRadius-L);
			background-color: var(--pr-t-elevation-surface-raised);
			display: flex; // TODO
			gap: var(--pr-t-spacings-75); // TODO
			align-items: center;
		}

		.fileUpload_file-status {
			display: flex;
			border-radius: var(--commons-borderRadius-M);
			overflow: hidden;

			img {
				object-fit: cover;
			}
		}

		.fileUpload_file-button {
			@include button.S;
			@include button.onlyIconS;
			@include button.text;
		}

		.fileUpload_file-informations {
			flex-grow: 1;
			padding: var(--pr-t-spacings-50);
			display: block; // TODO
		}

		.fileUpload_file-informations-filename {
			display: block;
		}

		.fileUpload_file-informations-extension,
		.fileUpload_file-informations-size {
			color: var(--palettes-neutral-600);
			font-size: var(--sizes-S-fontSize);
			line-height: var(--sizes-S-lineHeight);
			display: inline-block;
		}

		.fileUpload_file-informations-extension + .fileUpload_file-informations-size {
			margin-left: var(--pr-t-spacings-200);
			position: relative;

			&::before {
				content: '';
				position: absolute;
				inset: var(--pr-t-spacings-50) auto var(--pr-t-spacings-50) calc(var(--pr-t-spacings-100) * -1);
				width: var(--commons-divider-width);
				background-color: var(--commons-divider-color);
			}
		}
	}
}
