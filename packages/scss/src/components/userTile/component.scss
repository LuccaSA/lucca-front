@use '@lucca-front/scss/src/commons/utils/namespace';

@mixin component($atRoot: namespace.$defaultAtRoot) {
	display: flex;
	align-items: center;
	gap: var(--components-userTile-gap);
	overflow-wrap: break-word;

	.avatar {
		display: flex;
		align-self: start;
		align-items: center;
		min-block-size: var(--components-avatar-size);
	}

	// .user-tile-label is deprecated
	&:has(.userTile-content-info, .user-tile-label) {
		// Apply height to avatar (calculed on title & info height) to avoid img overflow
		.avatar {
			block-size: calc(var(--components-userTile-title-lineHeight) + var(--components-userTile-info-lineHeight));
		}
	}

	@at-root ($atRoot) {
		// .user-info is deprecated
		.userTile-content,
		.user-info {
			display: flex;
			flex-direction: column;
			margin: 0;
		}

		// .user-tile-title is deprecated
		.userTile-content-name,
		.user-tile-title {
			font-size: var(--components-userTile-title-fontSize);
			line-height: var(--components-userTile-title-lineHeight);
			color: var(--palettes-neutral-800);
			margin: 0;
		}

		// .user-tile-label is deprecated
		.userTile-content-info,
		.user-tile-label {
			font-size: var(--components-userTile-info-fontSize);
			line-height: var(--components-userTile-info-lineHeight);
			color: var(--palettes-neutral-600);
			margin: 0;
		}

		// .user-tile-footnote deprecated
		.user-tile-footnote {
			font-size: var(--pr-t-font-body-S-fontSize);
			line-height: var(--pr-t-font-body-S-lineHeight);
		}
	}
}
