@use '@lucca-front/scss/src/commons/utils/reset';
@use '@lucca-front/icons/src/commons/utils/icon';

@mixin component($atRoot: 'without: rule') {
	@keyframes toast {
		0% {
			transform: translateY(var(--pr-t-spacings-200));
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	right: var(--components-toasts-right);
	top: var(--components-toasts-top);
	max-width: var(--components-toasts-maxwidth);
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	position: fixed;
	z-index: 9999;

	@at-root ($atRoot) {
		.toasts-item {
			display: flex;
			gap: var(--pr-t-spacings-50);
			color: var(--components-toasts-color);
			padding: var(--pr-t-spacings-50);
			margin-bottom: var(--components-toasts-margin-bottom);
			background-color: var(--palettes-neutral-800);
			animation-name: toast;
			animation-duration: var(--commons-animations-durations-standard);
			animation-iteration-count: 1;
			border-radius: var(--commons-borderRadius-XL);
			overflow: hidden;
			position: relative;
			transform-origin: top;
		}

		.toast-item-icon {
			display: block;
			background: var(--palettes-700, var(--palettes-product-700));
			border-radius: var(--commons-borderRadius-L);
			padding: var(--pr-t-spacings-100) var(--pr-t-spacings-50);
		}

		.toast-item-content {
			display: flex;
			flex-grow: 1;
			flex-direction: column;
			gap: var(--pr-t-spacings-50);
			padding: var(--pr-t-spacings-100) 0 var(--pr-t-spacings-100) var(--pr-t-spacings-100);
		}

		.toasts-item-kill {
			@include reset.button;
			width: auto;
			color: var(--colors-white-color);
			transition-property: opacity;
			transition-duration: var(--commons-animations-durations-fast);
			height: 1.5rem;
			min-width: 1.5rem;
			margin: var(--pr-t-spacings-100);
			cursor: pointer;
			position: relative;
			border: 0;
			background: transparent;
		}
	}
}
