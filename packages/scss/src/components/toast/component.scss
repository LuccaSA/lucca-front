@use '@lucca-front/scss/src/components/button/exports' as button;

@mixin component($atRoot: 'without: rule') {
	max-width: var(--components-toasts-maxwidth);
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	position: fixed;
	z-index: 9999;
	inset: var(--components-toasts-inset);

	html:has(.main-content .footer.mod-sticky, .dialog.mod-drawer .dialog-inside-footer) & {
		--components-toasts-bottom: calc(var(--components-toasts-footerHeight) + var(--pr-t-spacings-300));
	}

	@at-root ($atRoot) {
		.toasts-item {
			display: flex;
			gap: var(--pr-t-spacings-50);
			color: var(--components-toasts-color);
			padding: var(--pr-t-spacings-50);
			margin-bottom: var(--components-toasts-margin-bottom);
			background-color: var(--palettes-neutral-800);
			animation-name: toastsItem;
			animation-duration: var(--commons-animations-durations-standard);
			animation-iteration-count: 1;
			border-radius: var(--commons-borderRadius-XL);
			overflow: hidden;
			position: relative;
			transform-origin: top;

			@keyframes toastsItem {
				0% {
					transform: translateY(var(--pr-t-spacings-200));
					opacity: 0;
				}

				100% {
					opacity: 1;
				}
			}

			&:hover,
			&:focus-within {
				.toasts-item-kill {
					animation-play-state: paused;
				}
			}
		}

		.toast-item-icon {
			background: var(--palettes-700, var(--palettes-product-700));
			border-radius: var(--commons-borderRadius-L);
			padding: var(--pr-t-spacings-100) var(--pr-t-spacings-50);
		}

		.toast-item-content {
			display: flex;
			flex-grow: 1;
			flex-direction: column;
			gap: var(--pr-t-spacings-50);
			padding: var(--pr-t-spacings-100) 0 var(--pr-t-spacings-100) var(--pr-t-spacings-100);
		}

		.toasts-item-kill {
			// the button class should be added to the component, but in the meantime we initialize the component here
			@include button.vars;
			@include button.component;

			@include button.onlyIcon;
			@include button.text;
			@include button.inverted;

			@keyframes timer {
			}

			align-self: flex-start;
			border-radius: var(--commons-borderRadius-L);
			animation-name: timer;
		}
	}
}
