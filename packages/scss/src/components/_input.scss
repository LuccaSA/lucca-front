.input {
	padding-top: 1rem;
	position: relative;
	width: 220px;
}

.input-field {
	background: transparent;
	border: 0;
	box-shadow: 0 1px 0 0 #CCCCCC;
	color: _color("text.default");
	font-family: unquote(_theme("commons.font.family"));
	font-weight: 400;
	margin-bottom: .15rem;
	outline: 0;
	padding: .5rem 0;
	position: relative;
	transition: box-shadow 150ms ease, color 150ms ease;
	width: 100%;

	&::placeholder {
		color: _color("text.placeholder");
		opacity: 0;
		transition: opacity 150ms ease;
	}

	&:focus {
		box-shadow: 0 2px 0 0 _component("input.color");

		&::placeholder {
			opacity: 1;
		}

		~ .input-label {
			color: _component("input.color");
			font-size: _theme("sizes.small.font-size");
			top: 0;
		}
	}
}

.input-label {
	color: #A6A6A6;
	left: 0;
	overflow: hidden;
	pointer-events: none;
	position: absolute;
	text-overflow: ellipsis;
	top: 1.3rem;
	transition: all 150ms ease;
	white-space: nowrap;
	width: 100%;
}

.input-options {
	background: white;
	border-radius: 3px;
	box-shadow: 0 2px 6px rgba(0, 0, 0, .2), 0 0 3px rgba(0, 0, 0, .3);
	left: 0;
	list-style: none;
	max-height: 15rem;
	min-width: 100%;
	opacity: 0;
	overflow: auto;
	padding: 0;
	position: absolute;
	top: 2.5rem;
	transform: scaleY(0);
	transform-origin: right top;
	transition: all 150ms ease;
	z-index: 999;
}

.input-options-entry {
	cursor: pointer;
	padding: .5rem 1rem;
	transition: background 50ms ease;

	&:hover {
		background: rgba(0, 0, 0, .1);
	}
}

.input-error {
	color: _color("error");
	font-size: _theme("sizes.small.font-size");
	margin: 0;
}

.input-helper {
	color: _color("text.light");
	font-size: _theme("sizes.small.font-size");
	margin: 0;
}


// MOD
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.input {
	&.mod-block {
		width: 100%;
	}

	&.mod-inline {
		display: inline-block;
		margin-left: .15rem;
		margin-right: .15rem;
	}

	&.mod-short {
		width: 150px;
	}

	&.mod-shorter {
		width: 100px;
	}

	&.mod-shortest {
		width: 50px;
	}

	&.mod-autocomplete {
		.input-field {
			padding-right: 1.5rem;
		}

		&::after {
			bottom: .15rem;
			color: _color("text.light");
			@include makeIcon("search");
			position: absolute;
			right: 0;
		}
	}

	&.mod-select {
		.input-field {
			padding-right: 1.5rem;

			&:focus {
				box-shadow: 0 1px 0 0 #CCCCCC;
			}
		}

		.input-label {
			color: #A6A6A6;
			font-size: _theme("sizes.standard.font-size");
			top: 1.3rem;
		}

		.input-options {
			top: 0;
		}

		&::after {
			bottom: .15rem;
			color: _color("text.light");
			@include makeIcon("search");
			position: absolute;
			right: 0;
		}
	}

	&.mod-search {
		&::after {
			bottom: .3rem;
			color: _color("text.light");
			@include makeIcon("search");
			position: absolute;
			right: 0;
		}

		.input-field {
			padding-right: 1.5rem;
		}

		.input-label {
			padding-right: 1.5rem;
		}
	}
}


// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.input-field {
	&[disabled], &[readonly] {
		background: transparent;
		background-image: linear-gradient(to right, #CCCCCC 33%, rgba(255, 255, 255, 0) 0%);
		background-position: bottom;
		background-repeat: repeat-x;
		background-size: 3px 1px;
		box-shadow: none;
		color: _color("text.light");
		cursor: not-allowed;
	}

	&.is-error {
		@include formError();
	}

	&.is-filled {
		@include formFilled();
	}
}

.input {
	&.is-open {
		.input-options {
			opacity: 1;
			transform: scaleY(1);
		}

		&::after {
			@include makeIcon("search");
		}
	}
}

.input-options-entry {
	&.is-focus {
		background: rgba(0, 0, 0, .1);
	}
}
