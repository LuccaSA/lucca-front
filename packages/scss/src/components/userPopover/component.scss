@use '@lucca-front/scss/src/components/avatar/exports' as avatar;
@use '@lucca-front/scss/src/commons/utils/namespace' as ns;

@mixin component($atRoot: ns.$defaultAtRoot) {
	width: 23.5rem;
	max-width: calc(100vw - var(--pr-t-spacings-200) * 2);
	padding: var(--pr-t-spacings-200);

	@at-root ($atRoot) {
		.userPopover-details {
			display: flex;
			align-items: flex-start;
			gap: var(--pr-t-spacings-200);
		}

		.userPopover-details-info {
			min-width: 0;
		}

		.userPopover-details-info-name {
			margin: calc(var(--pr-t-spacings-50) * -1);
			padding: var(--pr-t-spacings-50);
			font-size: var(--sizes-L-fontSize);
			line-height: var(--sizes-L-lineHeight);
			font-weight: 700;
			color: currentColor;
		}

		.userPopover-details-info-name-linkOptional {
			color: currentColor;
			text-decoration: underline;
			text-decoration-thickness: 0.75px;
			text-underline-offset: 3px;

			&:hover {
				color: currentColor;
				text-decoration-thickness: 1.5px;
			}
		}

		.userPopover-details-info-detail {
			margin-bottom: 0;
			font-size: var(--sizes-S-fontSize);
			line-height: var(--sizes-S-lineHeight);
		}

		.userPopover-details-info-detail-workplace {
			display: flex;
			align-items: flex-start;
			gap: var(--pr-t-spacings-50);
			color: currentColor;
			text-decoration: none;

			&:is(a, button) {
				&:hover,
				&:focus {
					color: currentColor;

					.userPopover-details-info-detail-workplace-state {
						text-decoration: underline;
					}
				}
			}
		}
	}

	.userPopover-details-avatar {
		// :not(.class) is only there to increase specificity when the class isnâ€™t present
		// but the class should be present, and this code is temporary
		&.avatar,
		&:not(.avatar) {
			@include avatar.XXXL;

			margin: var(--pr-t-spacings-50) 0;
		}
	}
}
