@use '@lucca-front/icons/src/icon/exports' as icon;

@use '@lucca-front/scss/src/commons/utils/namespace';
@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/commons/utils/reset';
@use '@lucca-front/scss/src/commons/utils/media';

@use '@lucca-front/scss/src/components/clear/exports' as clear;
@use '@lucca-front/scss/src/components/segmentedControl/exports' as segmentedControl;
@use '@lucca-front/scss/src/components/textField/exports' as textField;

@mixin component($atRoot: namespace.$defaultAtRoot) {
	.textField {
		@include textField.filterPill;
	}

	@at-root ($atRoot) {
		.filterPillBar-divider.divider {
			&:not(:has(~ .filterPill:not(.is-hidden))) {
				display: none;
			}
		}

		.filterPillBar-segmentedControl.segmentedControl {
			@include segmentedControl.S;
		}

		.filterPillBar-scrollBox.scrollBox {
			align-items: flex-start;
		}

		.filterPillBar-scrollBox-first {
			display: var(--components-filterPillBar-extremitiesDisplay);
			margin-inline-end: calc(var(--components-scrollBox-gap) * -1);
		}

		.filterPillBar-scrollBox-last {
			display: var(--components-filterPillBar-extremitiesDisplay);
			margin-inline-start: calc(var(--components-scrollBox-gap) * -1);
		}

		.filterPillBar-scrollBox-group {
			display: flex;
			gap: var(--components-scrollBox-gap);
			flex-wrap: wrap;

			&:has(+ .filterPillBar-scrollBox-last) {
				flex-grow: 1;
			}
		}

		.filterPillBar-scrollBox-export {
			margin-inline-start: auto;
			padding-inline-start: var(--pr-t-spacings-200);
		}
	}
}
