@use '@lucca-front/scss/src/commons/utils/reset';
@use '@lucca-front/scss/src/commons/utils/a11y';

@mixin component($atRoot: 'without: rule') {
	@include reset.list;

	display: flex;
	flex-wrap: wrap;
	align-content: flex-start;

	@at-root ($atRoot) {
		.avatars-item {
			margin-block: calc(var(--components-avatars-overlap) / 2);

			&:not(:last-child) {
				margin-right: calc(var(--components-avatars-overlap) * -1);
			}
		}

		.avatars-item-action-more,
		.avatars-item-userPicture {
			box-shadow: 0 0 0 var(--components-avatars-border) var(--components-avatars-background);
			border-radius: var(--commons-borderRadius-full);
		}

		.avatars-item-action {
			@include reset.button;

			display: flex;
			text-decoration: none;
			color: var(--palettes-grey-800);
			transition: transform var(--commons-animations-durations-fast);
			transform: scale(var(--components-avatars-scale));
			color: currentColor;

			&:hover,
			&:focus {
				--components-avatars-scale: 1.1;
			}

			&:focus-visible {
				@include a11y.focusVisible;

				border-radius: var(--commons-borderRadius-full);
				outline-offset: 0;
			}
		}

		.avatars-item-action-more {
			display: flex;
			align-items: center;
			justify-content: center;
			background-color: var(--palettes-grey-200);
			width: var(--components-avatars-size);
			height: var(--components-avatars-size);
			font-size: var(--components-avatars-fontSize);
		}
	}
}
