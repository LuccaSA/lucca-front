.menu {
	align-items: center;
	background-color: _component("menu.background");
	display: flex;
	position: relative;
	gap: 2.5rem; // magic number
	flex-wrap: wrap;

	&:not(.mod-noBorder)::after {
		content: "";
		position: absolute;
		bottom: 0;
		height: 1px;
		left: 0;
		right: 0;
		border-bottom: 1px solid _theme("commons.divider.color");
	}
}

.menu-list {
	@include listReset;

	display: flex;
	gap: 2.5rem; // magic number
	flex-wrap: wrap;
}

.menu-link { // legacy syntax
	margin-right: 2.5rem; // magic number
}

.menu-link, // legacy syntax
.menu-list-item-action {
	border-radius: _theme("commons.border.radius");
	color: _color("grey", "700");
	margin: 0 _theme('spacings.big') 0 0;
	padding: _component("menu.padding");
	position: relative;
	text-decoration: none;
	transition: color _component("menu.animations.durations.fast") ease;
	text-align: center;
	display: block;

	&::after {
		background-color: _color("primary", "700");
		border-radius: _theme("commons.border.radius") _theme("commons.border.radius") 0 0;
		bottom: 0;
		content: "";
		display: block;
		height: 2px;
		left: 0;
		position: absolute;
		right: 0;
		transform: scale(0, 1);
		transition: transform _component("menu.animations.durations.fast") ease;
		z-index: 1;
	}

	&:focus-visible,
	&:hover {
		&:not(.is-active, [aria-current="page"]) {
			color: _color("text.light");

		&::after {
			transform: scale(.75);
		}
	}

	&:focus-visible {
		outline: none;

		&.is-active, // legacy syntax
		&[aria-current="page"] {
			&::after {
				transform: scale(.75);
			}
		}
	}
}

.menu-link-placeholder, // legacy syntax
.menu-list-item-action-placeholder {
	&::after {
		content: attr(data-content-after);
		display: block;
		height: 0;
		overflow: hidden;
		font-weight: 600;
	}
}


// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu {
	&.mod-header {
		padding: 0 2.5rem;
	}
&.mod-small {
		.menu-link {
			font-size: _theme('sizes.small.font-size');
			line-height: _theme('sizes.small.line-height');
}
}

// PALETTES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu {
	@mixin menuColoring($palette) {
		&::after {
			background-color: _color($palette);
		}
	}

	// default color
	.menu-link,  // legacy syntax
	.menu-list-item-action {
		@include menuColoring("menu.default-palette");
	}

	// palette colors
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			.menu-link,
			.menu-list-item-action {
				@include menuColoring($name);
			}
		}
	}
}

// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu-link,
.menu-list-item-action {
	&.is-active,  // legacy syntax
	&[aria-current="page"]
	 {
		color: _color("primary", "700");

		&::after {
			transform: scale(1);
		}
	}
	&.is-disabled {
		&, 
		.label {
			color: _color("grey", "500");
			pointer-events: none;
		}
	}
}
