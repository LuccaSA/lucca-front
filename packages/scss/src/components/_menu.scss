.menu {
	align-items: center;
	background-color: _component("menu.background");
	display: flex;
	position: relative;

	&::after {
		content: "";
		position: absolute;
		bottom: 0;
		height: 1px;
		left: 0;
		right: 0;
		border-bottom: 1px solid _theme("commons.divider.color");
	}
}

.menu-link {
	border-radius: _theme("commons.border.radius");
	color: _color("text.light");
	margin: 0 2.5rem 0 0;
	padding: _component("menu.padding");
	position: relative;
	text-decoration: none;
	transition: color _component("menu.animations.durations.fast") ease;

	&::after {
		border-radius: _theme("commons.border.radius") _theme("commons.border.radius") 0 0;
		bottom: 0;
		content: "";
		display: block;
		height: 3px;
		left: 0;
		position: absolute;
		right: 0;
		transform: scale(0, 1);
		transition: transform _component("menu.animations.durations.fast") ease;
		z-index: 1;
	}

	&:hover:not(.is-active) {
		color: _color("text.light");

		&::after {
			transform: scale(1);
		}
	}

	&:last-child {
		margin-right: 0;
	}
}


// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu {
	&.mod-header {
		padding: 0 2.5rem;
	}
}


// PALETTES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu {
	@mixin menuColoring($palette) {
		&::after {
			background-color: _color($palette);
		}
	}

	// default color
	.menu-link {
		@include menuColoring("menu.default-palette");
	}

	// palette colors
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			.menu-link {
				@include menuColoring($name);
			}
		}
	}
}


// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.menu-link {
	&.is-active {
		color: _color("text.dark");
		font-weight: 600;

		&::after {
			transform: scale(1);
		}
	}
}
