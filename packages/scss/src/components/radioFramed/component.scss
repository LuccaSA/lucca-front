@use '@lucca-front/scss/src/commons/utils/namespace';

@mixin component($atRoot: namespace.$defaultAtRoot) {
	position: relative;
	overflow: hidden;
	padding: var(--pr-t-spacings-50);
	border: solid 1px var(--components-radioFramed-borderColor);
	border-radius: var(--commons-borderRadius-L);
	box-shadow: var(--components-radioFramed-boxShadow);
	background-color: var(--palettes-neutral-0);
	transition-property: box-shadow, border-color;
	transition-duration: var(--commons-animations-durations-fast);
	block-size: 100%;
	display: flex;
	flex-direction: column;

	@at-root ($atRoot) {
		.radioFramed-header-label.formLabel {
			position: static;
			font-weight: 600;

			&::after {
				content: '';
				position: absolute;
				inset: calc(var(--pr-t-spacings-50) * -1);
			}
		}

		.radioFramed-header-field.form-field {
			position: static;
		}

		.radioFramed-header-input.radioField-input {
			~ .radioFramed-header-icon.radioField-icon {
				&::after {
					outline: none;
				}
			}
		}

		.radioFramed-header {
			padding: var(--components-radioFramed-padding);
			border-radius: var(--commons-borderRadius-L);
			background-color: var(--components-radioFramed-header-backgroundColor);
			transition-property: background-color;
			transition-duration: var(--commons-animations-durations-fast);
			position: relative;
			flex-grow: 1;
			display: flex;
			justify-content: space-between;
			gap: var(--pr-t-spacings-100);
		}

		.radioFramed-header-illustration {
			&:empty {
				display: none;
			}
		}

		.radioFramed-content {
			display: var(--components-radioFramed-content-display);
			padding: var(--components-radioFramed-padding);
			margin-inline-start: var(--components-radioFramed-content-marginInlineStart);
		}
	}
}

@mixin wrapper($atRoot: namespace.$defaultAtRoot) {
	display: flex;
	flex-direction: column;
	gap: var(--pr-t-spacings-150);
	margin-block: var(--pr-t-spacings-50);
}
