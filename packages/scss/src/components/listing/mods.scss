@use '@lucca-front/icons/src/commons/utils/icon';

@use '@lucca-front/icons/src/icon/exports' as icons;

@mixin ordered {
	--components-listing-listStyleType: decimal;
}

@mixin icons {
	--components-listing-paddingInlineStart: 0;
	--components-listing-item-marginInlineStart: 0;
	--components-listing-item-display: flex;

	.listing-item-icon.lucca-icon {
		&:not([class*='icon-']) {
			&::before {
				--icon-content: var(--components-listing-item-icon-before-content);
			}
		}
	}
}

@mixin checklist {
	--components-listing-item-marginInlineStart: 0;
	--components-listing-paddingInlineStart: 0;
	--components-listing-item-display: flex;
	--components-listing-item-icon-backgroundColor: var(--palettes-100, var(--palettes-neutral-100));

	.listing-item-icon.lucca-icon {
		@include icon.generate('sign_confirm');
	}
}

@mixin nested($level: 1) {
	@if $level == 1 {
		--components-listing-listStyleType: circle;
	}

	@if $level == 2 {
		--components-listing-listStyleType: square;
	}
}

@mixin nestedOrdered($level: 1) {
	@if $level == 1 {
		--components-listing-listStyleType: lower-alpha;
	}

	@if $level == 2 {
		--components-listing-listStyleType: lower-roman;
	}
}

@mixin inline {
	--components-listing-paddingInlineStart: 0;
	--components-listing-item-marginInlineStart: var(--components-listing-inlineStart);
	--components-listing-flexDirection: row;
}

@mixin inlineMarker {
	--components-listing-item-marginInlineStart: var(--pr-t-spacings-200);
}

@mixin hideFirstItems {
	--components-listing-marginInlineStart: calc(var(--components-listing-inlineFirst) * -1);
	--components-listing-clipPath: inset(
		calc(var(--pr-t-spacings-50) * -1)
		calc(var(--pr-t-spacings-50) * -1)
		calc(var(--pr-t-spacings-50) * -1)
		calc(var(--components-listing-inlineFirst) - var(--pr-t-spacings-50))
	);
}

@mixin hideFirstItemsMarker {
	--components-listing-inlineFirst: var(--pr-t-spacings-200);
}
