@use '@lucca-front/scss/src/commons/utils/reset';

@mixin component($atRoot: 'without: rule') {
	column-gap: var(--spacings-L);
	align-items: center;
	display: flex;
	position: relative;
	flex-wrap: wrap;

	&:not(.mod-noBorder) {
		&::after {
			border-bottom-width: var(--commons-divider-width);
			border-bottom-color: var(--commons-divider-color);
			border-bottom-style: solid;
			position: absolute;
			height: 1px;
			bottom: 0;
			left: 0;
			right: 0;
			content: '';
		}
	}

	.label { // deprecated
		margin-right: 0;
		background-color: var(--palettes-grey-100);
		color: var(--palettes-grey-700);
	}

	@at-root ($atRoot) {
		.menu-list {
			@include reset.list;

			align-items: flex-end;
			column-gap: var(--spacings-L);
			display: flex;
			flex-wrap: wrap;
		}

		.menu-link, // legacy syntax
		.menu-list-item-action {
			@include reset.button;
			padding: var(--components-menu-padding);
			border-radius: var(--commons-borderRadius-M);
			color: var(--palettes-grey-800);
			display: inline-flex;
			align-items: center;
			text-align: center;
			gap: var(--spacings-XS);
			transition-duration: var(--commons-animations-durations-fast);
			transition-property: color;
			position: relative;
			text-decoration: none;
			width: auto;
			z-index: 1;

			&::after {
				background-color: var(--palettes-700, var(--palettes-primary-700));
				border-radius: var(--commons-borderRadius-M) var(--commons-borderRadius-M) 0 0;
				transition-duration: var(--commons-animations-durations-fast);
				transition-property: transform;
				display: block;
				position: absolute;
				bottom: 0;
				height: 2px;
				left: 0;
				right: 0;
				transform: scale(0, 1);
				z-index: 1;
				content: '';
			}

			&:not(.is-disabled, [disabled]) {
				&:hover {
					&:not(.is-active, [aria-current='page']) {
						color: var(--palettes-grey-900);
					}

					.label { // deprecated
						background-color: var(--palettes-100, var(--palettes-primary-100));
						color: var(--palettes-700, var(--palettes-primary-700));
					}

					&::after {
						transform: scale(0.75, 1);
					}
				}
			}
		}

		.menu-link-placeholder {
			&::after {
				content: attr(data-content-after);

				display: block;
				height: 0;
				overflow: hidden;
				font-weight: 600;
			}
		}
	}
}
