.progress {
	background-color: _theme("commons.background.base");
	height: _component("progress.height");
	margin: _component("progress.margin");
	position: relative;
	overflow: hidden;
}

.progress-bar {
	background-color: _component("progress.bar.background");
	bottom: 0;
	left: 0;
	position: absolute;
	top: 0;
	transition: background-color _theme("commons.animations.durations.standard") ease, width _theme("commons.animations.durations.standard") ease;

	&::after {
		animation: progress _component("progress.duration") infinite;
		background-color: _component("progress.bar.gradient");
		bottom: 0;
		content: "";
		display: block;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
		transform-origin: left;
	}
}


// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.progress {
	&.mod-indeterminate {
		.progress-bar {
			width: 30%;
			animation: progressIndetereminate _component("progress.duration") infinite;
			animation-timing-function: linear;
		}
	}
}


// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.progress {
	&.is-success {
		.progress-bar {
			background-color: _color("success");
			width: 100% !important;

			&::after {
				display: none;
			}
		}
	}

	&.is-error {
		.progress-bar {
			background-color: _color("error");
			width: 100% !important;

			&::after {
				display: none;
			}
		}
	}
}

// ANIMATIONS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

@keyframes progress {
	from {
		transform: scale(0, 1);
		opacity: 1;
	}

	to {
		transform: scale(1, 1);
		opacity: .3;
	}
}

@keyframes progressIndetereminate {
	0% {
		left: -35%;
		right: 100%;
	}

	100% {
		left: 100%;
		right: -35%;
	}
}
