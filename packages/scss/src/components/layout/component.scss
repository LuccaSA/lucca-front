@use 'sass:map';
@use 'sass:math';
@use '../../commons/utils/media';
@use '../../commons/config';

@mixin component(
	$banner: '.layout-banner',
	$headers: '.layout-content-headers',
	$subheader: '.layout-content-headers-subheader',
	$header: '.layout-content-headers-header',
	$content: '.layout-content',
	$contentContainer: '.layout-content-container',
	$contentInner: '.layout-content-inner',
	$contentFooter: '.layout-content-footer',
	$navside: '.layout-navside',
	$navsideContent: '.layout-navside-content',
	$navsideContentInner: '.layout-navside-content-inner',
	$navsideFooter: '.layout-navside-footer',
	$navsideToggle: '.layout-navside-toggle',
	$aside: '.layout-aside',
	$asideContent: '.layout-aside-content',
	$asideContentInner: '.layout-aside-content-inner',
	$asideFooter: '.layout-aside-footer'
) {
	min-height: 100vh;
	display: grid;

	@include media.largerThan('l') {
		grid-template-columns: var(--commons-navSide-compact-width) 1fr var(--components-aside-width);
		grid-template-rows: var(--commons-banner-height) 1fr;
		grid-template-areas:
			'banner banner banner'
			'navside content aside';
	}

	@include media.smallerThan('l') {
		grid-template-columns: var(--commons-navSide-compact-width) 1fr;
		grid-template-rows: var(--commons-banner-height) 1fr auto;
		grid-template-areas:
			'banner banner'
			'navside content'
			'navside aside';
	}

	@include media.smallerThan('s') {
		grid-template-columns: 1fr;
		grid-template-rows: var(--commons-banner-height) auto 1fr auto;
		grid-template-areas:
			'banner'
			'navside'
			'content'
			'aside';
	}

	@at-root {
		#{$contentContainer} {
			max-width: math.div(map.get(config.$breakpoints, 'm'), 16px) * 1rem;
		}

		#{$banner} {
			grid-area: banner;
			height: var(--commons-banner-height);
			background-color: var(--colors-white-color);
			position: sticky;
			top: 0;
			z-index: 2;
		}

		#{$content} {
			top: var(--commons-banner-height);
			grid-area: content;
			position: sticky;
			display: flex;
			flex-direction: column;

			@include media.smallerThan('s') {
				position: static;
			}
		}

		#{$headers},
		#{$subheader},
		#{$header} {
			background-color: var(--colors-white-color);
			top: var(--commons-banner-height);
			position: sticky;

			@include media.smallerThan('s') {
				position: static;
			}
		}

		#{$header} {
			z-index: 1;
		}

		#{$contentInner} {
			flex-grow: 1;
		}

		#{$contentFooter} {
			background-color: var(--colors-white-color);
			position: sticky;
			bottom: 0;

			@include media.smallerThan('s') {
				position: static;
			}
		}

		#{$navside},
		#{$aside} {
			min-height: calc(100vh - var(--commons-banner-height));
			top: var(--commons-banner-height);
			display: flex;
			position: sticky;
			flex-direction: column;
			align-self: self-start;

			@include media.smallerThan('s') {
				min-height: 0;
			}
		}

		#{$aside} {
			grid-area: aside;

			@include media.smallerThan('l') {
				min-height: 0;
				position: static;
			}
		}

		#{$navside} {
			max-height: calc(100vh - var(--commons-banner-height));
			grid-area: navside;
			z-index: 2;
			overflow: auto;
		}

		#{$navsideContentInner},
		#{$asideContentInner} {
			flex-grow: 1;
		}

		#{$navsideFooter},
		#{$asideFooter} {
			position: sticky;
			bottom: 0;
			background-color: var(--colors-white-color);

			@include media.smallerThan('s') {
				margin-top: 0;
				position: static;
			}
		}

		#{$navsideToggle} {
			background-color: var(--colors-white-color);
			border: 0;
			margin: 0;
			padding: 0;
			top: 0;
			position: sticky;
			color: inherit;
			font: inherit;
			cursor: pointer;

			@include media.largerThan('s') {
				display: none;
			}
		}

		#{$asideContent},
		#{$navsideContent} {
			flex-grow: 1;
			display: flex;
			flex-direction: column;
		}

		#{$navsideContent} {
			@include media.smallerThan('s') {
				#{$navsideToggle}[aria-expanded='false'] ~ & {
					display: none;
				}
			}
		}
	}
}
