@use '@lucca-front/scss/src/commons/config';
@use '@lucca-front/scss/src/commons/core';

@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/loading';
@use '@lucca-front/scss/src/commons/utils/a11y';

@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin disabled {
	--components-button-cursor: default;
	--components-button-color: var(--palettes-grey-500);
	--components-button-backgroundColor: var(--commons-disabled-background);

	.numericBadge {
		@include numericBadge.disabled;
	}
}

@mixin disabledOutlined {
	--components-button-backgroundColor: var(--colors-white-color);
	--components-button-boxShadow: 0 0 0 1px var(--palettes-grey-400);
}

@mixin disabledHover {
	--components-button-color: var(--palettes-grey-500);
}

@mixin disabledText {
	--components-button-backgroundColor: transparent;
}

@mixin loading {
	--components-button-opacity: var(--commons-disabled-opacity);

	&:not(.mod-more) {
		@include loading.spinner(var(--components-button-font-size));

		--components-button-pointerEvents: none;
		--components-button-color: transparent;
		--components-button-userSelect: none;
	}
}

@mixin loadingS {
	&:not(.mod-more) {
		@include loading.spinner(var(--sizes-S-fontSize));
	}
}

@mixin state {
	--components-button-color: transparent;
	--components-button-pointerEvents: none;
	--components-button-userSelect: none;

	&::after {
		color: var(--colors-white-color);
		font-size: calc(1.5 * var(--components-button-font-size));
		height: var(--components-button-line-height);
		inset: 0;
		margin: auto;
		position: absolute;
	}

	&:hover {
		--components-button-backgroundColor: var(--palettes-600);
	}

	&:active {
		--components-button-backgroundColor: var(--palettes-800);
	}
}

@mixin success {
	@include core.cssvars('palettes', config.$success);

	&:not(.mod-more) {
		@include state;

		&::after {
			@include icon.generate('sign_confirm');
		}
	}
}

@mixin error {
	@include core.cssvars('palettes', config.$error);

	&:not(.mod-more) {
		@include state;

		&::after {
			@include icon.generate('sign_close');
		}
	}
}

@mixin hover {
	--components-button-color: var(--palettes-text, var(--palettes-primary-text));
	--components-button-backgroundColor: var(--palettes-600, var(--palettes-primary-600));
}

@mixin focusVisible {
	@include a11y.focusVisible;
}

@mixin active {
	--components-button-backgroundColor: var(--palettes-800, var(--palettes-primary-800));
}

@mixin textHover {
	--components-button-color: var(--palettes-700, var(--palettes-grey-700));
	--components-button-backgroundColor: var(--palettes-100, var(--palettes-grey-100));
}

@mixin textActive {
	--components-button-backgroundColor: var(--palettes-200, var(--palettes-grey-200));
}

@mixin textFocusVisible {
	--components-button-backgroundColor: var(--palettes-100, var(--palettes-grey-100));
}

@mixin deleteHover {
	--components-button-color: var(--palettes-error-700);
	--components-button-backgroundColor: var(--palettes-error-100);
}

@mixin deleteActive {
	--components-button-color: var(--palettes-error-700);
	--components-button-backgroundColor: var(--palettes-error-200);
}

@mixin deleteOutlined {
	&:hover {
		--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-error-400), var(--commons-boxShadow-XS);
	}

	&:focus-visible {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-100);
		--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-error-400), var(--commons-boxShadow-XS);
	}

	&:active {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-200);
	}
}

@mixin outlinedHover {
	--components-button-color: var(--palettes-700, var(--palettes-grey-700));
	--components-button-backgroundColor: var(--palettes-100, var(--palettes-grey-100));
}

@mixin outlinedActive {
	--components-button-backgroundColor: var(--palettes-200, var(--palettes-grey-200));
}

@mixin outlinedFocusVisible {
	@include a11y.focusVisible($offset: 3px);
}

@mixin invertHover {
	--components-button-color: var(--colors-white-color);
	--components-button-backgroundColor: rgba(255, 255, 255, 0.2);
}

@mixin invertFocusVisible {
	--components-button-color: var(--colors-white-color);
	--components-button-backgroundColor: rgba(255, 255, 255, 0.2);
}

@mixin counterHover {
	.button-counter {
		--components-button-backgroundColor: var(--palettes-500, var(--palettes-primary-500));
	}
}
