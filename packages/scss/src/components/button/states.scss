@use '@lucca-front/scss/src/commons/config';
@use '@lucca-front/scss/src/commons/core';

@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/loading';
@use '@lucca-front/scss/src/commons/utils/a11y';

@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin disabled {
	--components-button-cursor: default;
	--components-button-color: var(--palettes-neutral-500); // disabled token
	--components-button-backgroundColor: var(--commons-disabled-background);
	--components-button-pointerEvents: none;

	.numericBadge {
		@include numericBadge.disabled;
	}
}

@mixin loading {
	--components-button-opacity: 0.4;
	--components-button-pointerEvents: none;
	--components-button-color: transparent;
	--components-button-userSelect: none;

	@include loading.spinner(var(--components-button-font-size));
}

@mixin loadingS {
	@include loading.spinner(var(--sizes-S-fontSize));
}

@mixin state {
	--components-button-color: transparent;
	--components-button-pointerEvents: none;
	--components-button-userSelect: none;

	&::after {
		color: var(--palettes-neutral-0);
		font-size: calc(1.5 * var(--components-button-font-size));
		block-size: var(--components-button-line-height);
		inset: 0;
		margin: auto;
		position: absolute;
	}
}

@mixin success {
	@include core.cssvars('palettes', config.$success);

	@include state;

	&::after {
		@include icon.generate('sign_confirm');
	}
}

@mixin error {
	@include core.cssvars('palettes', config.$critical);

	@include state;

	&::after {
		@include icon.generate('sign_close');
	}
}
