@use '@lucca-front/icons/src/icon/exports' as icons;
@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin S {
	@include icons.S;

	--components-button-font-size: var(--sizes-S-fontSize);
	--components-button-line-height: var(--sizes-S-lineHeight);
	--components-button-padding: var(--pr-t-spacings-75) var(--pr-t-spacings-150);
	--components-button-gap: var(--pr-t-spacings-75);

	.numericBadge {
		@include numericBadge.S;
	}
}

@mixin XS {
	@include icons.XS;

	--components-button-font-size: var(--sizes-XS-fontSize);
	--components-button-line-height: var(--sizes-XS-lineHeight);
	--components-button-padding: var(--pr-t-spacings-50) var(--pr-t-spacings-100);
	--components-button-gap: var(--pr-t-spacings-50);

	.numericBadge {
		@include numericBadge.XS;
	}
}

@mixin onlyIcon {
	--components-button-padding: var(--pr-t-spacings-100);
}

@mixin onlyIconS {
	--components-button-padding: var(--pr-t-spacings-75);
}

@mixin onlyIconXS {
	--components-button-padding: var(--pr-t-spacings-50);
}

@mixin block {
	--components-button-width: 100%;
}

@mixin withIcon {
	--components-button-padding: var(--pr-t-spacings-100) var(--pr-t-spacings-150);
}

@mixin withIconS {
	--components-button-padding: var(--pr-t-spacings-75) var(--pr-t-spacings-150);
}

@mixin withIconXS {
	--components-button-padding: var(--pr-t-spacings-50) var(--pr-t-spacings-100);
}

@mixin textDisabled {
	--components-button-backgroundColor: transparent;
	--components-button-color: var(--palettes-neutral-500); // disabled token candidate
}

@mixin text {
	--components-button-backgroundColor: transparent;
	--components-button-color: var(--palettes-700, var(--palettes-neutral-700));

	&:hover,
	&:focus-visible {
		--components-button-color: var(--palettes-700, var(--palettes-neutral-700));
		--components-button-backgroundColor: var(--palettes-100, var(--palettes-neutral-100));
	}

	&:active {
		--components-button-backgroundColor: var(--palettes-200, var(--palettes-neutral-200));
	}

	&:disabled {
		@include textDisabled;
	}
}

@mixin outlinedDisabled {
	--components-button-backgroundColor: var(--palettes-neutral-0);
	--components-button-boxShadow: 0 0 0 1px var(--commons-disabled-placeholder);
	--components-button-color: var(--palettes-neutral-500); // disabled token candidate
}

@mixin outlined {
	--components-button-backgroundColor: var(--palettes-neutral-0);
	--components-button-color: var(--palettes-700, var(--palettes-neutral-700));
	--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-400, var(--palettes-neutral-400));

	&:hover {
		--components-button-color: var(--palettes-700, var(--palettes-neutral-700));
		--components-button-backgroundColor: var(--palettes-100, var(--palettes-neutral-100));
	}

	&:active {
		--components-button-backgroundColor: var(--palettes-200, var(--palettes-neutral-200));
	}

	&:focus-visible {
		@include a11y.focusVisible($offset: 3px);
	}

	&:disabled {
		@include outlinedDisabled;
	}
}

@mixin inverted {
	--components-button-color: var(--palettes-neutral-0);

	&:hover,
	&:focus-visible {
		--components-button-color: var(--palettes-neutral-0);
		--components-button-backgroundColor: var(--palettes-neutral-900);
	}

	&:active {
		--components-button-backgroundColor: var(--palettes-neutral-700);
	}
}

@mixin more {
	--components-button-minWidth: 2rem;
	--components-button-padding: 0;

	&::before {
		@include icon.generate('arrow_chevron_bottom');

		block-size: 0;
		vertical-align: text-top;
	}
}

@mixin moreS {
	--components-button-minWidth: 1.75rem;
}

@mixin moreXS {
	--components-button-minWidth: 1.5rem;
}

@mixin delete {
	&:hover {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-100);
	}

	&:active {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-200);
	}
}

@mixin deleteText {
	&:hover,
	&:focus-visible {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-100);
	}

	&:active {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-200);
	}
}

@mixin deleteOutlined {
	&:hover {
		--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-error-400);
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-100);
	}

	&:focus-visible {
		--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-error-400);
		--components-button-color: var(--palettes-error-700);
	}

	&:active {
		--components-button-color: var(--palettes-error-700);
		--components-button-backgroundColor: var(--palettes-error-200);
	}
}

@mixin iconOnRight {
	padding-inline-end: var(--pr-t-spacings-150);
}

@mixin iconOnLeft {
	padding-inline-start: var(--pr-t-spacings-150);
}

@mixin disclosure {
	@include iconOnRight;

	.icon-arrowChevronBottom {
		transition-property: transform;
		transition-duration: var(--commons-animations-durations-fast);
		transform: var(--components-button-arrow-transform);
	}

	&[aria-expanded='true'] {
		--components-button-arrow-transform: rotate(-180deg);
	}
}
