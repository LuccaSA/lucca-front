@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/icons/src/icon/exports' as icons;
@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin S {
	@include icons.S;

	--components-button-font-size: var(--sizes-S-fontSize);
	--components-button-line-height: var(--sizes-S-lineHeight);
	--components-button-padding: 0.375rem 0.75rem;
	--components-button-gap: 0.375rem;

	.numericBadge {
		@include numericBadge.S;
	}
}

@mixin XS {
	@include icons.XS;

	--components-button-font-size: var(--sizes-XS-fontSize);
	--components-button-line-height: var(--sizes-XS-lineHeight);
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS);
	--components-button-gap: var(--spacings-XXS);

	.numericBadge {
		@include numericBadge.XS;
	}
}

@mixin onlyIcon {
	--components-button-padding: var(--spacings-XS);
}

@mixin onlyIconS {
	--components-button-padding: 0.375rem;
}

@mixin onlyIconXS {
	--components-button-padding: var(--spacings-XXS);
}

@mixin block {
	--components-button-width: 100%;
}

@mixin withIcon {
	--components-button-padding: var(--spacings-XS) calc(var(--spacings-XS) + var(--spacings-XXS));
}

@mixin withIconS {
	--components-button-padding: calc(var(--spacings-XXS) + var(--spacings-XXS) / 2) calc(var(--spacings-XS) + var(--spacings-XXS));
}

@mixin withIconXS {
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS);
}

@mixin text {
	--components-button-backgroundColor: transparent;
	--components-button-color: var(--palettes-700, var(--palettes-grey-700));
}

@mixin outlined {
	--components-button-backgroundColor: var(--colors-white-color);
	--components-button-color: var(--palettes-700, var(--palettes-grey-700));
	--components-button-boxShadow: 0 0 0 var(--commons-divider-width) var(--palettes-400, var(--palettes-grey-400));

	// deprecated
	.button-counter {
		color: var(--palettes-800, var(--palettes-grey-800));
		background-color: var(--palettes-300, var(--palettes-grey-300));
	}
}

@mixin invert {
	--components-button-color: var(--colors-white-color);
}

@mixin more {
	--components-button-minWidth: 2rem;
	--components-button-padding: 0;

	&::before {
		@include icon.generate('arrow_chevron_bottom');

		height: 0;
		vertical-align: text-top;
	}
}

@mixin moreS {
	--components-button-minWidth: 1.75rem;
}

@mixin moreXS {
	--components-button-minWidth: 1.5rem;
}

// deprecated
@mixin counter {
	--components-button-padding: var(--spacings-XS) calc(var(--spacings-XS) + var(--spacings-XXS)) var(--spacings-XS) var(--spacings-S);

	.button-counter {
		background-color: var(--palettes-600, var(--palettes-primary-600));
		border-radius: 1rem;
		display: flex;
		font-size: var(--sizes-XS-fontSize);
		height: 1.5rem;
		min-width: 1.5rem;
		align-items: center;
		justify-content: center;
		transition: background-color var(--commons-animations-durations-fast) ease;
	}
}

// deprecated
@mixin counterS {
	--components-button-padding: 0.375rem calc(var(--spacings-XS) + var(--spacings-XXS)) 0.375rem var(--spacings-S);

	.button-counter {
		height: 1.25rem;
		min-width: 1.25rem;
	}
}

// deprecated
@mixin counterXS {
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS) var(--spacings-XXS) calc(var(--spacings-XS) + var(--spacings-XXS));

	.button-counter {
		height: 1rem;
		min-width: 1rem;
	}
}
