@use '@lucca-front/icons/src/mixins' as icon;

@mixin size($icon) {
  font-size: var(--components-button-font-size);
  line-height: var(--components-button-line-height);
  padding: var(--components-button-padding);

  #{$icon} {
    font-size: var(--components-button-icon-font-size);
    line-height: var(--components-button-icon-line-height);
  }
}

@mixin small($icon: '.lucca-icon') {
  @include size($icon);

  --components-button-font-size: var(--components-button-small-font-size);
  --components-button-line-height: var(--components-button-small-line-height);
  --components-button-padding: var(--components-button-small-padding);
  --components-button-icon-font-size: 1rem;
  --components-button-icon-line-height: 1;
}

@mixin smaller($icon: '.lucca-icon') {
  @include size($icon);

  --components-button-font-size: var(--components-button-smaller-font-size);
  --components-button-line-height: var(--components-button-smaller-line-height);
  --components-button-padding: var(--components-button-smaller-padding);
  --components-button-icon-font-size: 0.875rem;
  --components-button-icon-line-height: 1;
}

@mixin link {
  background-color: transparent;
  color: var(--palettes-grey-800);

  &:not([disabled], .is-disabled) {
    &:hover {
      box-shadow: none;
      background-color: var(--palettes-50, var(--palettes-primary-50));
      color: var(--palettes-700, var(--palettes-primary-700));
    }

    &:focus {
      box-shadow: 0 0 0 4px var(--palettes-100, var(--palettes-primary-100)),
        inset 0 0 0 1px var(--palettes-300, var(--palettes-primary-300));
      background: var(--palettes-100, var(--palettes-primary-100));
    }
  }
}

@mixin outlined {
  &:not([disabled], .is-disabled) {
    color: var(--palettes-700, var(--palettes-primary-700));
    box-shadow: inset 0 0 0 1px var(--palettes-400, var(--palettes-primary-400));
    background-color: var(--colors-white-color);
    border-color: var(--palettes-grey-200, var(--palettes-primary-200));

    &:hover {
      color: var(--palettes-700, var(--palettes-primary-700));
      background-color: var(--palettes-100, var(--palettes-primary-100));
      box-shadow: var(--commons-elevations-elevation-1), inset 0 0 0 1px var(--palettes-400, var(--palettes-primary-400));
    }

    &:focus {
      color: var(--palettes-700, var(--palettes-primary-700));
      background-color: var(--palettes-100, var(--palettes-primary-100));
      box-shadow: var(--commons-elevations-elevation-1), 0 0 0 4px var(--palettes-100, var(--palettes-primary-100)),
        inset 0 0 0 1px var(--palettes-400, var(--palettes-primary-400));
      outline: none;
    }

    &:active {
      color: var(--palettes-700, var(--palettes-primary-700));
      background-color: var(--palettes-200, var(--palettes-primary-200));
      box-shadow: var(--commons-elevations-elevation-1), 0 0 0 4px var(--palettes-200, var(--palettes-primary-200)),
        inset 0 0 0 1px var(--palettes-500, var(--palettes-primary-500));
    }
  }
}

@mixin outlinedWhite {
  background-color: var(--colors-white-color);
  color: var(--palettes-grey-700);
}

@mixin block {
  width: 100%;
}

@mixin icon($icon: '.button-icon') {
  align-items: center;
  display: inline-flex;
  gap: var(--spacings-smaller);
  padding-left: var(--spacings-small);
  padding-right: var(--spacings-small);
  justify-content: center;

  @at-root {
    #{$icon} {
      height: 1.5rem;
      line-height: 1.5rem;
      font-size: 1.5rem;
      transform: translateX(-0.2rem);
      vertical-align: bottom;
    }
  }
}

@mixin iconSmall($icon: '.button-icon') {
  #{$icon} {
    font-size: var(--components-button-small-font-size);
    height: var(--components-button-small-line-height);
    line-height: var(--components-button-small-line-height);
  }
}

@mixin iconSmaller($icon: '.button-icon') {
  gap: var(--spacings-smallest);

  #{$icon} {
    font-size: var(--components-button-smaller-font-size);
    height: var(--components-button-smaller-line-height);
    line-height: var(--components-button-smaller-line-height);
  }
}

@mixin invert {
  color: var(--colors-white-color);

  &:not([disabled], .is-disabled) {
    &:hover,
    &:focus {
      background-color: rgba(255, 255, 255, 0.1);
      color: var(--colors-white-color);
    }

    &:focus {
      box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1);
    }
  }
}

@mixin more {
  padding: 0 !important;
  text-align: center;
  min-width: 2rem;

  &::before {
    @include icon.makeIcon('arrow_south');

    height: 0;
    vertical-align: text-top;
  }

  .mod-small {
    width: 1.75rem;
  }
}

@mixin counter {
  padding-left: var(--spacings-small);
  padding-right: var(--spacings-small);
}

@mixin counterSmall($counter: '.button-counter') {
  #{$counter} {
    height: 1rem;
    min-width: 1rem;
  }
}
