@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/a11y';

@mixin S {
	--components-button-font-size: var(--sizes-S-fontSize);
	--components-button-line-height: var(--sizes-S-lineHeight);
	--components-button-padding: .375rem .75rem;
	--icon-size: var(--sizes-M-fontSize);
}

@mixin XS {
	--components-button-font-size: var(--sizes-XS-fontSize);
	--components-button-line-height: var(--sizes-XS-lineHeight);
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS);
	--icon-size: var(--sizes-S-fontSize);
	--components-button-gap: var(--spacings-XXS);
}

@mixin text {
	background-color: transparent;
	color: var(--palettes-700, var(--palettes-grey-700));
	padding: var(--spacings-XS);

	&:not([disabled], .is-disabled) {
		&:hover {
			background-color: var(--palettes-50, var(--palettes-grey-50));
		}

		&:active {
			background-color: var(--palettes-100, var(--palettes-grey-100));
		}
	}

	&:focus-visible {
		background-color: var(--palettes-50, var(--palettes-grey-50));
	}
}

@mixin textXS {
	padding: var(--spacings-XXS) .375rem;
}

@mixin outlined {
	&:not([disabled], .is-disabled) {
		color: var(--palettes-700, var(--palettes-grey-700));
		box-shadow: inset 0 0 0 1px var(--palettes-400, var(--palettes-grey-400));
		background-color: var(--colors-white-color);

		&:hover {
			background-color: var(--palettes-50, var(--palettes-grey-50));
		}

		&:active {
			background-color: var(--palettes-100, var(--palettes-grey-100));
		}
	}

	.button-counter {
		background-color: var(--palettes-300, var(--palettes-grey-300));
		color: var(--palettes-800, var(--palettes-grey-800));
	}
}

@mixin block {
	width: 100%;
}

@mixin icon($atRoot: 'without: rule') {
	--components-button-padding: var(--spacings-XS) calc(var(--spacings-XS) + var(--spacings-XXS));
}

@mixin iconXS {
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS);
}

@mixin invert {
	color: var(--colors-white-color);

	&:not([disabled], .is-disabled) {
		&:hover {
			background-color: rgba(255, 255, 255, 0.2);
		}

		&:focus-visible {
			background-color: rgba(255, 255, 255, 0.2);
			color: var(--colors-white-color);
		}
	}
}

@mixin more {
	padding: 0 !important;
	text-align: center;
	min-width: 2rem;

	&::before {
		@include icon.generate('arrow_south');

		height: 0;
		vertical-align: text-top;
	}
}

@mixin moreS {
	min-width: 1.75rem;
}

@mixin counter($atRoot: 'without: rule') {
	--components-button-padding: var(--spacings-XS) calc(var(--spacings-XS) + var(--spacings-XXS)) var(--spacings-XS) var(--spacings-S);

	@at-root ($atRoot) {
		.button-counter {
			background-color: var(--palettes-600, var(--palettes-primary-600));
			border-radius: 1rem;
			display: flex;
			font-size: var(--sizes-XS-fontSize);
			height: 1.5rem;
			min-width: 1.5rem;
			align-items: center;
			justify-content: center;
			transition: background-color var(--commons-animations-durations-fast) ease;
		}

		&:hover {
			.button-counter {
				background-color: var(--palettes-500, var(--palettes-primary-500));
			}
		}
	}
}

@mixin counterS {
	--components-button-padding: .375rem calc(var(--spacings-XS) + var(--spacings-XXS)) .375rem var(--spacings-S);

	.button-counter {
		height: 1.25rem;
		min-width: 1.25rem;
	}
}

@mixin counterXS {
	--components-button-padding: var(--spacings-XXS) var(--spacings-XS) var(--spacings-XXS) calc(var(--spacings-XS) + var(--spacings-XXS));

	.button-counter {
		height: 1rem;
		min-width: 1rem;
	}
}
