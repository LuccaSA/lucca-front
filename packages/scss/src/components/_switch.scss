.switch {
	margin: .25rem 0;
	position: relative;
}

.switch-input {
	opacity: 0;
	pointer-events: none;
	position: absolute;
}

.switch-label {
	color: lighten(_get($luTheme, "palette.colors.greyStandard"), 25%);
	cursor: pointer;
	display: inline-block;
	padding: 0 0 0 2.7rem;
	transition: color 150ms ease;

	&::before {
		background: #BBBBBB;
		border-radius: 10px;
		content: "";
		display: block;
		height: 16px;
		left: 0;
		position: absolute;
		top: 4px;
		transition: all 150ms ease;
		width: 32px;
	}

	&::after {
		background: white;
		border-radius: 50%;
		box-shadow: 0 1px 4px rgba(0, 0, 0, .5);
		content: "";
		display: block;
		height: 20px;
		left: -2px;
		position: absolute;
		top: 2px;
		transition: all 150ms ease;
		width: 20px;
	}
}


// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.switch-input {
	/*
		Checked
	*/

	&:checked ~ .switch-label {
		color: _get($luTheme, "palette.colors.greyStandard");

		&::before {
			background: lighten(_get($luTheme, "palette.colors.primary"), 20%);
		}

		&::after {
			background: _get($luTheme, "palette.colors.primary");
			left: 14px;
		}
	}

	/*
		Disabled
	*/

	&[disabled], &[readonly] {
		~ .switch-label {
			color: _get($luTheme, "palette.colors.greyLight");
			cursor: not-allowed;

			&::before {
				background: lighten(_get($luTheme, "palette.colors.greyLight"), 25%);
			}
			&::after {
				background: lighten(_get($luTheme, "palette.colors.greyLight"), 15%);
			}
		}
	}
}
