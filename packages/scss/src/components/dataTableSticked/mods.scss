@use '@lucca-front/scss/src/commons/utils/color';

@mixin stickyHeader {
	--components-dataTable-overflow: auto;

	.dataTable-head {
		position: sticky;
		inset-block-start: -1px;
		z-index: 1;

		&::after {
			content: '';
			inset-inline: 0;
			block-size: var(--pr-t-spacings-100);
			position: absolute;
			background-image: linear-gradient(#{color.transparentize(var(--palettes-neutral-400), 0.24)}, transparent);
			pointer-events: none;
			box-shadow: 0 1px var(--commons-border-200) inset;
			opacity: var(--components-dataTable-shadow-headerOpacity, 1);
		}
	}
}

@mixin columnsOverflow {
	--components-dataTable-overflow: auto;

	display: flex;

	&::before,
	&::after {
		content: '';
		position: sticky;
		inline-size: var(--pr-t-spacings-100);
		background-image: linear-gradient(to right, #{color.transparentize(var(--palettes-neutral-400), 0.24)}, transparent);
		flex-shrink: 0;
		margin-inline-start: calc(var(--pr-t-spacings-100) * -1);
		inset-block-start: 0;
		pointer-events: none;
		z-index: 3;
	}

	&::before {
		inset-inline-start: 0;
		opacity: var(--components-dataTable-shadow-firstColumnOpacity);
	}

	&::after {
		inset-inline-end: 0;
		transform: scaleX(-1);
		opacity: var(--components-dataTable-shadow-lastColumnOpacity);
	}
}

@mixin rowsOverflow {
	--components-dataTable-overflow: auto;

	.dataTableShadows {
		display: flex;
		flex-direction: column;

		&::before,
		&::after {
			content: '';
			position: sticky;
			display: block;
			block-size: var(--pr-t-spacings-100);
			background-image: linear-gradient(to bottom, #{color.transparentize(var(--palettes-neutral-400), 0.24)}, transparent);
			margin-block-start: calc(var(--pr-t-spacings-100) * -1);
			flex-shrink: 0;
			pointer-events: none;
			z-index: 2;
		}

		&::before {
			inset-block-start: 0;
			opacity: var(--components-dataTable-shadow-firstRowOpacity);
		}

		&::after {
			inset-block-end: 0;
			transform: scaleY(-1);
			opacity: var(--components-dataTable-shadow-lastRowOpacity);
		}
	}
}

@mixin stickyColumn {
	--components-dataTable-overflow: auto;

	%addShadow {
		content: '';
		position: absolute;
		inset-block: 0;
		inset-inline-start: 100%;
		inline-size: var(--pr-t-spacings-100);
		pointer-events: none;
		background-image: linear-gradient(to right, #{color.transparentize(var(--palettes-neutral-400), 0.24)}, transparent);
	}

	:is(.dataTable-head-row-cell, .dataTable-body-row-cell, .dataTable-foot-row-cell) {
		&:nth-last-child(1 of .mod-stickyColumn:has(~ :not(.mod-stickyColumn))) {
			&::after {
				@extend %addShadow;
				opacity: var(--components-dataTable-shadow-leftColumnOpacity, 1);
			}
		}

		&:nth-last-child(1 of :not(.mod-stickyColumn)) + .mod-stickyColumn {
			&::after {
				@extend %addShadow;
				inset-inline-start: auto;
				inset-inline-end: 100%;
				transform: scaleX(-1);
				opacity: var(--components-dataTable-shadow-rightColumnOpacity, 1);
			}
		}

		&.mod-stickyColumn {
			position: sticky;

			&:first-child {
				inset-inline-start: 0;
			}

			&:last-child {
				--components-dataTable-cell-shadow: 0 1px inset var(--commons-border-200), 1px 0 var(--palettes-neutral-0); // white shadow is for Chrome
				inset-inline-end: 0;
			}
		}
	}
}


@mixin stickyColumnBorder {
	:is(.dataTable-head-row-cell, .dataTable-body-row-cell, .dataTable-foot-row-cell) {
		&.mod-stickyColumn {
			&:nth-last-child(1 of .mod-stickyColumn:has(~ :not(.mod-stickyColumn))) {
				transform: translateX(-1px);
			}

			&:last-child {
				--components-dataTable-cell-shadow: 0 1px inset var(--commons-border-200), 1px 0 inset var(--commons-border-200),
					1px 0 var(--palettes-neutral-0); // white shadow is for Chrome
			}
		}
	}
}

@mixin stickyShadowAnimated {
	@supports(animation-timeline: --stickyColumnShadow) {
		animation: stickyColumnShadow, stickyHeaderShadow;
		animation-timeline: --stickyColumnShadow, --stickyHeaderShadow;
		scroll-timeline: --stickyColumnShadow x, --stickyHeaderShadow y;

		@keyframes stickyColumnShadow {
			0% {
				--components-dataTable-shadow-leftColumnOpacity: 0;
			}
			10%, 100% {
				--components-dataTable-shadow-leftColumnOpacity: 100;
			}
			0%, 90% {
				--components-dataTable-shadow-rightColumnOpacity: 100;
			}
			100% {
				--components-dataTable-shadow-rightColumnOpacity: 0;
			}
		}
		@keyframes stickyHeaderShadow {
			0% {
				--components-dataTable-shadow-headerOpacity: 0;
			}
			10%, 100% {
				--components-dataTable-shadow-headerOpacity: 100;
			}
		}
	}
}
