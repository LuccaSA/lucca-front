@use '@lucca-front/icons/src/commons/utils/icon';

@mixin component($atRoot: 'without: rule') {
	box-shadow: var(--commons-boxShadow-XS);
	background-color: var(--components-header-background);
	min-height: var(--components-header-height);
	padding: var(--components-header-padding);
	position: relative;
	display: flex;
	align-items: center;
	z-index: 99;

	@at-root ($atRoot) {
		.header-contentLeft {
			display: flex;
		}

		.header-contentRight {
			display: flex;
			margin-left: auto;
		}

		.header-nav {
			height: var(--components-header-height);
			padding-left: calc(var(--components-header-height) + var(--spacings-S));
			align-items: flex-start;
			display: flex;
			flex-direction: column;
			justify-content: center;
			position: relative;
		}

		.header-nav-back {
			transition-duration: var(--commons-animations-durations-fast);
			transition-property: all;
			border-right-color: var(--commons-divider-color);
			border-right-width: var(--commons-divider-width);
			border-right-style: solid;
			color: var(--palettes-grey-500);
			height: var(--components-header-height);
			width: var(--components-header-height);
			line-height: var(--components-header-height);
			font-size: 1.3rem;
			left: 0;
			top: 0;
			position: absolute;
			display: block;
			text-align: center;
			text-decoration: none;

			&:hover {
				background-color: var(--commons-background-base);
				color: var(--palettes-grey-800);
			}

			&::before {
				@include icon.generate('arrow_left');
			}
		}

		.header-nav-category {
			color: var(--palettes-grey-500);
			font-size: var(--sizes-S-fontSize);
		}

		.header-nav-title {
			color: var(--palettes-primary-700);
			line-height: var(--sizes-XS-lineHeight);
			margin: 0;
		}
	}
}
