@use '@lucca-front/scss/src/commons/utils/reset';
@use '@lucca-front/icons/src/commons/utils/icon';

@mixin S {
	.timeline-step-title {
		padding-left: 1.25rem;

		&::before {
			width: 0.5rem;
			height: 0.5rem;
		}
	}
}

@mixin L {
	.timeline-step-title {
		padding-left: 2.25rem;
		min-width: 2rem;

		&::before {
			width: 1.5rem;
			height: 1.5rem;
		}
	}

	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) .timeline-step-title-icon {
		&::before {
			left: var(--spacings-XS);
		}
	}
}

@mixin addStepL {
	.timeline-step-title-icon {
		&::before {
			left: var(--spacings-XS);
		}
	}
}

@mixin vertical {
	align-items: flex-start;
	flex-direction: column;

	.timeline-step {
		margin-top: var(--spacings-XS);
		display: block;
		position: relative;
		width: 100%;

		// line
		&:not(:last-child)::after {
			content: '';
			display: block;
			height: auto;
			width: 2px;
			position: absolute;
			top: calc(var(--spacings-L) + var(--spacings-XXS));
			bottom: -0.75rem;
			left: 0.45rem; // magic number
			margin: 0;
		}

		&:not(:last-child)[aria-current='step'] {
			&::after {
				top: calc(var(--spacings-L) + var(--spacings-XXS));
			}
		}
	}

	.timeline-step-title {
		margin: var(--spacings-XS) 0;
		min-height: var(--spacings-M);
		min-width: 0;
	}

	.timeline-step-description {
		padding-left: var(--spacings-L);
	}

	.timeline-stepAddBetweenStep {
		min-height: 3rem;
	}
}

@mixin verticalNotSNotL {
	.timeline-step-title {
		&:before {
			left: 0;
		}
	}
}

@mixin verticalS {
	.timeline-step {
		&::after {
			bottom: calc(var(--spacings-S) * -1);
			left: 0.45rem; // magic number
			top: var(--spacings-L);
		}

		&[aria-current='step'] {
			&::after {
				top: var(--spacings-L);
			}
		}
	}
	.timeline-step-description {
		padding-left: var(--spacings-M);
	}
}

@mixin verticalL {
	.timeline-step {
		&::after {
			bottom: calc(var(--spacings-XS) * -1);
			left: 0.95rem; // magic number
			top: 2.5rem;
		}

		&[aria-current='step'] {
			&::after {
				top: 2.5rem;
			}
		}
	}
	.timeline-step-description {
		padding-left: 2.5rem;
		min-height: var(--spacings-L);
	}
}

@mixin verticalProgress {
	.timeline-step[aria-current='step'] {
		&::after {
			background: linear-gradient(180deg, var(--palettes-primary-700) var(--progress), var(--palettes-grey-200) var(--progress));
		}
	}
}

@mixin number {
	counter-reset: timeline;
	.timeline-step:not(.timeline-stepAddBetweenStep) {
		.timeline-step-title {
			counter-increment: timeline;

			&::before {
				content: counter(timeline);
				font-size: var(--sizes-XS-fontSize);
				line-height: 1;
			}
		}
	}
}

@mixin numberL {
	.timeline-step-title::after {
		font-size: var(--sizes-S-fontSize);
	}
}

@mixin checkedPastStep {
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step):not(.timeline-stepAddBetweenStep) {
		.timeline-step-title {
			.timeline-step-title-icon::before {
				@include icon.generate('tick');
				display: flex;
			}
		}
	}
}

@mixin checkedPastStepVerticalNotL {
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) {
		.timeline-step-title {
			.timeline-step-title-icon::before {
				left: 0;
			}
		}
	}
}

@mixin checkedPastStepVerticalL {
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) {
		.timeline-step-title {
			.timeline-step-title-icon::before {
				left: var(--sizes-XS-fontSize);
			}
		}
	}
}

@mixin addStep {
	.timeline-step {
		&:nth-last-child(2)::after {
			background-color: transparent;
			background-image: linear-gradient(
				90deg,
				transparent 25%,
				var(--palettes-grey-200) 25%,
				var(--palettes-grey-200) 50%,
				transparent 50%,
				transparent 75%,
				var(--palettes-grey-200) 75%,
				var(--palettes-grey-200) 100%
			);
			background-size: var(--spacings-XS) var(--spacings-XS);
		}

		&:last-child {
			.timeline-step-title {
				&:before {
					display: none;
				}
				.timeline-step-title-icon::before {
					@include icon.generate('plus');
					display: flex;
				}
			}
		}
	}

	.timeline-step-title-icon {
		&::before {
			content: '';
			color: var(--palettes-primary-800);
			width: 1rem;
			height: 1rem;
			display: flex;
			align-items: center;
			justify-content: center;
			border-radius: 50%;
			background-color: var(--palettes-primary-300);
			position: absolute;
			left: var(--spacings-XXS);
			top: 50%;
			transform: translateY(-50%);
		}
	}
}

@mixin addStepVertical {
	.timeline-step {
		&:nth-last-child(2)::after {
			background-color: transparent;
			background-image: linear-gradient(
				0deg,
				transparent 25%,
				var(--palettes-grey-200) 25%,
				var(--palettes-grey-200) 50%,
				transparent 50%,
				transparent 75%,
				var(--palettes-grey-200) 75%,
				var(--palettes-grey-200) 100%
			);
			background-size: var(--spacings-XS) var(--spacings-XS);
		}
	}
}

@mixin addStepVerticalNotL {
	.timeline-step:last-child {
		.timeline-step-title {
			.timeline-step-title-icon::before {
				left: 0;
			}
		}
	}
}

@mixin addStepVerticalL {
	.timeline-step:last-child {
		.timeline-step-title {
			.timeline-step-title-icon::before {
				left: var(--spacings-XS);
			}
		}
	}
}

@mixin addBetweenStep {
	.timeline-stepAddBetweenStep {
		.timeline-step-title {
			padding-left: 0;
			&:before {
				display: none;
			}
		}
	}
	.timeline-stepAddBetweenStep-title {
		@include reset.button;

		width: auto;

		&:focus,
		&:hover {
			outline: none;

			.timeline-step-title-icon::before {
				box-shadow: 0 0 0 0.25rem var(--palettes-primary-500);
			}
		}
	}
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) .timeline-step-title-icon::before {
		@include icon.generate('plus');
		display: flex;
		transition: box-shadow var(--commons-animations-durations-standard);
	}
}

@mixin addBetweenStepVerticalNotL {
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) .timeline-step-title-icon::before {
		left: 0;
	}
}

@mixin addBetweenStepL {
	.timeline-step:not([aria-current='step']):not([aria-current='step'] ~ .timeline-step) .timeline-step-title-icon::before {
		width: 1.5rem;
		height: 1.5rem;
		left: var(--spacings-XXS);
	}
}

@mixin progress {
	.timeline-step[aria-current='step'] {
		&::after {
			background: linear-gradient(90deg, var(--palettes-primary-700) var(--progress), var(--palettes-grey-200) var(--progress));
		}
	}
}

@mixin notPastChecked {
	.timeline-step {
		&::after {
			background-color: var(--palettes-grey-200);
		}
	}

	.timeline-step-title {
		color: var(--palettes-grey-900);

		&::before {
			background-color: var(--palettes-primary-700);
			color: var(--colors-white-color);
		}
	}
}
