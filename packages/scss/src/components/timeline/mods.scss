@use 'structure' as s;
@use '../../commons/utils/reset';
@use '../../../../icons/src/mixins' as icon;

@mixin small($title: s.$title) { 
	#{$title} {
		padding-left: 1.25rem;

		&::before {
			width: 0.5rem;
			height: 0.5rem;
		}
	}
}

@mixin big($step: s.$step, $title: s.$title, $icon: s.$icon) {
	#{$title} {
		padding-left: 2.25rem;
		min-width: var(--spacings-big);

		&::before {
			width: 1.5rem;
			height: 1.5rem;
		}
	}

	#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) #{$icon},
	&.mod-addStep #{$icon} {
		&::before {
			left: var(--spacings-smaller);
		}
	}
}

@mixin vertical($step: s.$step, $title: s.$title, $icon: s.$icon, $description: s.$description, $between: s.$between) {
	align-items: flex-start;
	flex-direction: column;
	
	#{$step} {
		margin-top: var(--spacings-smaller);
		display: block;
		position: relative;

		//line
		&:not(:last-child)::after {
			content: '';
			display: block;
			height: auto;
			width: 2px;
			position: absolute;
			top: calc(var(--spacings-big) + var(--spacings-smallest));
			bottom: -0.75rem;
			left: 0.45rem; // magic number
			margin: 0;
		}

		&:not(:last-child)[aria-current='step'] {
			&::after {
				top: calc(var(--spacings-big) + var(--spacings-smallest));
			}
		}
	}

	#{$title} {
		margin: var(--spacings-smaller) 0;
		min-height: var(--spacings-standard);
		min-width: 0;
	}

	&:not(.mod-small):not(.mod-big) {
		#{$title} {
			&:before {
				left: 0;
			}
		}
	}

	#{$description} {
		padding-left: var(--spacings-big);
	}

	&.mod-small {
		#{$step} {
			&::after {
				bottom: calc(#{var(--spacings-small)} * -1);
				left: 0.45rem; // magic number
				top: var(--spacings-big);
			}

			&[aria-current='step'] {
				&::after {
					top: var(--spacings-big);
				}
			}
		}
		#{$description} {
			padding-left: var(--spacings-standard);
		}
	}

	&.mod-big {
		#{$step} {
			&::after {
				bottom: calc(#{var(--spacings-smaller)} * -1);
				left: 0.95rem; // magic number
				top: 2.5rem;
			}

			&[aria-current='step'] {
				&::after {
					top: 2.5rem;
				}
			}
		}
		#{$description} {
			padding-left: 2.5rem;
			min-height: var(--spacings-big);
		}
	}
	
	#{$between} {
		min-height: 3rem;
	}

	&.mod-progress {
		#{$step}[aria-current='step'] {
			&::after {
				background: linear-gradient(
					180deg,
					var(--palettes-primary-700) var(--progress),
					var(--palettes-grey-200) var(--progress)
				);
			}
		}
	}
}

@mixin number($step: s.$step, $title: s.$title, $between: s.$between) {
	counter-reset: timeline;
	#{$step}:not(#{$between}) {
		#{$title} {
			counter-increment: timeline;

			&::before {
				content: counter(timeline);
				font-size: var(--sizes-smaller-font-size);
				line-height: 1;
			}
		}
	}
	&.mod-big {
		#{$title}::after {
			font-size: var(--sizes-small-font-size);
		}
	}
}

@mixin checkedPastStep($step: s.$step, $title: s.$title, $between: s.$between, $icon: s.$icon) {
	#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}):not(#{$between}) {
		#{$title} {
			#{$icon}::before {
				@include icon.makeIcon('tick');
				display: flex;
			}
		}
	}

	&.mod-vertical:not(.mod-big) {
		#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) {
			#{$title} {
				#{$icon}::before {
					left: 0;
				}
			}
		}
	}

	&.mod-vertical.mod-big {
		#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) {
			#{$title} {
				#{$icon}::before {
					left: var(--sizes-smaller-font-size);
				}
			}
		}
	}
}


@mixin addstep($step: s.$step, $title: s.$title, $between: s.$between, $icon: s.$icon) { 
	#{$step} {
		&:nth-last-child(2)::after {
			background-color: transparent;
			background-image: linear-gradient(
				90deg,
				transparent 25%,
				var(--palettes-grey-200) 25%,
				var(--palettes-grey-200) 50%,
				transparent 50%,
				transparent 75%,
				var(--palettes-grey-200) 75%,
				var(--palettes-grey-200) 100%
			);
			background-size: var(--spacings-smaller) var(--spacings-smaller);
		}

		&:last-child {
			#{$title} {
				&:before {
					display: none;
				}
				#{$icon}::before {
					@include icon.makeIcon('plus');
					display: flex;
				}
			}
		}
	}

	&.mod-vertical {
		#{$step} {
			&:nth-last-child(2)::after {
				background-color: transparent;
				background-image: linear-gradient(
					0deg,
					transparent 25%,
					var(--palettes-grey-200) 25%,
					var(--palettes-grey-200) 50%,
					transparent 50%,
					transparent 75%,
					var(--palettes-grey-200) 75%,
					var(--palettes-grey-200) 100%
				);
				background-size: var(--spacings-smaller) var(--spacings-smaller);
			}
		}

		&:not(.mod-big) {
			#{$step}:last-child {
				#{$title} {
					#{$icon}::before {
						left: 0;
					}
				}
			}
		}

		&.mod-big {
			#{$step}:last-child {
				#{$title} {
					#{$icon}::before {
						left: var(--spacings-smaller);
					}
				}
			}
		}
	}

	#{$icon} {
		content: '';
		color: var(--palettes-primary-800);
		width: 1rem;
		height: 1rem;
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		background-color: var(--palettes-primary-300);
		position: absolute;
		left: var(--spacings-smallest);
		top: 50%;
		transform: translateY(-50%);
	}
}

@mixin addBetweenStep($step: s.$step, $title: s.$title, $between: s.$between, $betweenTitle: s.$betweenTitle, $icon: s.$icon) {
	#{$between} {
		#{$title} {
			padding-left: 0;
			&:before {
				display: none;
			}
		}
	}
	#{$betweenTitle} {
		@include reset.button;
		width: auto;

		&:focus,
		&:hover {
			#{$icon}::before {
				box-shadow: 0 0 0 0.25rem var(--palettes-primary-500);
			}
		}
	}
	#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) #{$icon}::before {
		@include icon.makeIcon('plus');
		display: flex;
		transition: box-shadow var(--commons-animations-durations-standard);
	}

	&.mod-vertical:not(.mod-big) {
		#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) #{$icon}::before {
			left: 0;
		}
	}

	&.mod-big {
		#{$step}:not([aria-current='step']):not([aria-current='step'] ~ #{$step}) #{$icon}::before {
			width: 1.5rem;
			height: 1.5rem;
			left: var(--spacings-smallest);
		}
	}
}

@mixin progress($step: s.$step, $title: s.$title, $between: s.$between, $icon: s.$icon) {
	#{$step}[aria-current='step'] {
		&::after {
			background: linear-gradient(
				90deg,
				var(--palettes-primary-700) var(--progress),
				var(--palettes-grey-200) var(--progress)
			);
		}
	}
}