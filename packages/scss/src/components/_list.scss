.list {
	background-color: white;
	@include elevate(1);
	list-style: none;
	margin-bottom: _component("list.margin-bottom");
	padding: 0;
}

.list-item {
	align-items: center;
	border-bottom: _theme("commons.divider.width") solid _theme("commons.divider.color");
	color: _color("text.default");
	display: flex;
	position: relative;
	text-decoration: none;

	&:last-child {
		border: 0;
	}

	// if no hover on list item
	&:not(:hover) {
		.actionIcon {
			// and no focus on action icon
			&:not(:focus) {
				// then mask
				@include mask;
				opacity: 0;
			}
		}
	}
}

.list-item-content {
	color: _color("text.default");
	padding: _component("list.padding");
	text-decoration: none;
	width: 100%;
}

.list-item-content-title {
	margin: 0;
}

.list-item-content-description {
	margin: 0;
}

.list-item-actions {
	margin-left: auto;
	padding: _component("list.padding");
	padding-left: 0;
	transition: all _theme("commons.animations.durations.fast") ease;
	white-space: nowrap;
}

.list-item-handler {
	color: _color("text.placeholder");
	cursor: move;
	font-size: 1.3rem;
	left: 0;
	text-align: center;
	position: absolute;
	width: 2.4rem;

	&::before {
		@include makeIcon("drag");
		vertical-align: middle;
	}
}


// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒


.list-item {

	// Clickable

	&.mod-clickable {
		cursor: pointer;
		transition: background-color _theme("commons.animations.durations.fast") ease;

		&:hover {
			background-color: _component("list.hover.background");
		}
	}

	// Draggable

	&.mod-draggable {
		padding-left: 1rem;
	}
}
