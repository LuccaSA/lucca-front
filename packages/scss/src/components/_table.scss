.table {
	border-spacing: 0;
	display: table;
	font-size: _component('table.font-size');
	line-height: _component('table.line-height');
	text-align: left;
	width: 100%;
}

.table-head {
	display: table-header-group;
	vertical-align: bottom;
}

.table-head-row {
	display: table-row;
}

.table-head-row-cell {
	border-bottom: _theme('commons.divider.width') solid _theme('commons.divider.color');
	color: _color('text.light');
	display: table-cell;
	font-weight: 600;
	font-size: _theme('sizes.small.font-size');
	line-height: _theme('sizes.small.line-height');
	padding: _theme('spacings.small');
	text-align: left;
}

.table-body {
	display: table-row-group;
}

.table-body-row {
	background-color: white;
	display: table-row;
}

.table-body-row-cell {
	border-top: _theme('commons.divider.width') solid _theme('commons.divider.color');
	display: table-cell;
	padding: _component('table.padding');
	vertical-align: middle;
}

.table-body-row:first-child {
	.table-body-row-cell {
		border-top: none;
	}
}

.table-body-row:last-child {
	.table-body-row-cell {
		border-bottom: _theme('commons.divider.width') solid _theme('commons.divider.color');
	}
}

.table-body-row-cell-handler {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	width: 2rem;
	cursor: move;

	&:hover {
		&::after {
			color: _color('text.light');
		}
	}

	&::after {
		@include makeIcon('drag');
		color: _color('text.placeholder');
		margin: auto;
		height: 100%;
		display: flex;
		align-items: center;
	}
}

// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.table {
	&.mod-small {
		font-size: _theme('sizes.small.font-size');
		line-height: _theme('sizes.small.line-height');

		.table-head-row-cell {
			&.mod-sortable, // legacy
			.table-head-row-cell-sortableButton {
				&::after {
					margin-top: 0;
				}
			}
		}
	}

	&.mod-zebra {
		.table-body {
			tr:nth-child(odd) {
				background-color: _component('table.zebra.background');
			}
		}
	}

	&.mod-clickable {
		.table-body-row-cell {
			transition: background-color _theme('commons.animations.durations.fast');
		}

		.table-body-row-cell-action {
			color: _color('text.default');
			text-decoration: none;

			&:hover,
			&:focus {
				text-decoration: underline;
			}
		}

		.table-body-row {
			cursor: pointer;

			&:hover,
			&:focus-within {
				.table-body-row-cell {
					background-color: _component('table.hover.background');
				}
			}
		}
	}

	&.mod-alignTop {
		.table-body-row-cell {
			vertical-align: top;
		}
	}

	&.mod-card {
		border-top: 0;

		.table-head-row-cell {
			&:first-child {
				padding-left: _component('table.card.padding');
			}
			&:last-child {
				padding-right: _component('table.card.padding');
			}
		}
		.table-body-row {
			background-color: transparent;
			&:last-child {
				.table-body-row-cell {
					border-bottom: none;
				}
			}
		}
		.table-body-row-cell {
			&:first-child {
				padding-left: _component('table.card.padding');
			}
			&:last-child {
				padding-right: _component('table.card.padding');
			}
		}
	}

	&.mod-borderless {
		border: none;

		.table-body-row-cell,
		.table-head-row-cell {
			border-top: none;

			&:first-child {
				padding-left: 0;
			}

			&:last-child {
				padding-right: 0;
			}
		}
	}

	&.mod-noOffset {
		.table-head-row-cell,
		.table-body-row-cell {
			&:first-child {
				padding-left: 0;
			}

			&:last-child {
				padding-right: 0;
			}
		}
	}
}

.table-body-row {
	&.mod-header {
		vertical-align: bottom;
	}

	&.mod-parent {
		.table-body-row-cell {
			background-color: _color('grey', 100);
			color: _color('grey', 800);
			font-size: _theme('sizes.small.font-size');
			font-weight: 600;
			line-height: _theme('sizes.small.line-height');
		}

		&.mod-collapsable {
			.table-body-row-cell {
				cursor: pointer;

				&:hover {
					text-decoration: underline;
				}

				&::before {
					@include makeIcon('arrow_south');
					vertical-align: middle;
					margin-right: _theme('spacings.smaller');
					transition: transform _theme('commons.animations.durations.fast') ease;
				}
			}

			&.is-collapsed {
				.table-body-row-cell {
					&::before {
						transform: rotate(-90deg);
					}
				}
			}
		}
	}

	&.mod-child {
		.table-body-row-cell {
			&:first-child {
				padding-left: _theme('spacings.bigger');
			}
		}
	}

	&.mod-draggable {
		.table-body-row-cell:first-child {
			padding-left: 2rem;
			position: relative;
		}
	}
}

.table-body-row,
.table-head-row {
	&.mod-selectable {
		.table-body-row-cell,
		.table-head-row-cell {
			&:first-child {
				padding-right: _theme('spacings.smaller');
				width: 1rem;
			}
		}
	}
}

.table-head-row {
	&.mod-draggable {
		.table-head-row-cell:first-child {
			padding-left: 2rem;
			position: relative;
		}
	}
	&.mod-twoLines {
		.table-head-row-cell {
			vertical-align: top;
		}

		.table-head-row-cell-wrapper {
			display: inline-block;
			vertical-align: top;
			max-width: calc(100% - #{_theme('spacings.big')});
		}

		.table-head-row-cell-secondLine {
			display: block;
			font-weight: 400;
		}
	}
}

.table-head-row-cell {
	&.mod-sortable, // legacy
	.table-head-row-cell-sortableButton {
		cursor: pointer;

		&::after {
			@include makeIcon('arrow_full_north');
			margin: 0 0 0 _theme('spacings.smallest');
			opacity: 0;
			transform: translateY(#{_theme('spacings.smallest')});
			transition: opacity _theme('commons.animations.durations.fast') ease, transform _theme('commons.animations.durations.fast') ease;
		}

		&:hover,
		&:focus {
			&::after {
				transform: translateY(0);
				opacity: 0.5;
			}
		}
	}

	.table-head-row-cell-sortableButton {
		@include buttonReset;
	}
}

.table-head-row-cell-secondLine {
	display: block;
	margin-top: _theme('spacings.smallest');
	font-weight: 400;
}

.table-body-row-cell,
.table-head-row-cell {
	&.mod-actions {
		padding: 0.3rem _theme('spacings.smaller') 0.3rem 0;
		text-align: right;
		transition: opacity _theme('commons.animations.durations.fast') ease;
		white-space: nowrap;

		> *:not(.is-loading) {
			opacity: 0;
		}
	}

	&.mod-alignRight {
		text-align: right;
	}
}

.table-head-row-cell {
	&.mod-alignRight {
		&.mod-sortable, // legacy
		.table-head-row-cell-sortableButton {
			&::after {
				content: none;
			}

			&::before {
				@include makeIcon('arrow_full_north');
				margin: 0 _theme('spacings.smallest') 0 0;
				opacity: 0;
				transform: translateY(#{_theme('spacings.smallest')});
				transition: opacity _theme('commons.animations.durations.fast') ease, transform _theme('commons.animations.durations.fast') ease;
			}

			&:hover,
			&:focus {
				&::before {
					transform: translateY(0);
					opacity: 0.5;
				}
			}
		}
	}
}

.table-head-row,
.table-body-row {
	&:hover,
	&:focus-within {
		.table-body-row-cell,
		.table-head-row-cell {
			&.mod-actions {
				> * {
					opacity: 1;
				}
			}
		}
	}
}

.table-body-row-cell {
	&.mod-avatar {
		padding-right: 0;
		width: 2rem;
	}
}

// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.table-head-row-cell {
	// legacy
	&.is-sorted-descending,
	&.is-sorted-ascending {
		color: _color('text.dark');

		&::after {
			@include makeIcon('arrow_full_north');
			opacity: 1;
			transform: translateY(0);
		}

		&:hover {
			&::after {
				opacity: 1;
			}
		}
	}

	&[aria-sort] {
		padding: 0;

		.table-head-row-cell-sortableButton {
			padding: _theme('spacings.small');
		}
	}

	&[aria-sort='descending'],
	&[aria-sort='ascending'] {
		.table-head-row-cell-sortableButton {
			color: _color('text.dark');

			&::after {
				@include makeIcon('arrow_full_north');
				opacity: 1;
				transform: translateY(0);
			}

			&:hover,
			&:focus {
				&::after {
					opacity: 1;
				}
			}
		}
	}

	&.mod-alignRight {
		// legacy
		&.is-sorted-descending,
		&.is-sorted-ascending {
			&::before {
				@include makeIcon('arrow_full_north');
				opacity: 1;
				transform: translateY(0);
			}

			&::after {
				content: none;
			}

			&:hover {
				&::before {
					opacity: 1;
				}
			}
		}

		.table-head-row-cell-sortableButton {
			text-align: right;
		}

		&[aria-sort='descending'],
		&[aria-sort='ascending'] {
			.table-head-row-cell-sortableButton {
				&::before {
					@include makeIcon('arrow_full_north');
					opacity: 1;
					transform: translateY(0);
				}

				&::after {
					content: none;
				}

				&:hover,
				&:focus {
					&::before {
						opacity: 1;
					}
				}
			}
		}
	}

	&[aria-sort='ascending'] {
		.table-head-row-cell-sortableButton {
			&::after {
				@include makeIcon('arrow_full_north');
			}
		}

		&.mod-alignRight {
			.table-head-row-cell-sortableButton {
				&::before {
					@include makeIcon('arrow_full_north');
				}
			}
		}
	}

	&[aria-sort='descending'] {
		.table-head-row-cell-sortableButton {
			&::after {
				@include makeIcon('arrow_full_south');
			}
		}

		&.mod-alignRight {
			.table-head-row-cell-sortableButton {
				&::before {
					@include makeIcon('arrow_full_south');
				}
			}
		}
	}

	// legacy
	&.is-sorted-ascending {
		&::after {
			@include makeIcon('arrow_full_north');
		}
	}

	// legacy
	&.is-sorted-ascending {
		.mod-alignRight {
			&::before {
				@include makeIcon('arrow_full_north');
			}
		}
	}

	// legacy
	&.is-sorted-descending {
		&::after {
			@include makeIcon('arrow_full_south');
		}
	}

	// legacy
	&.is-sorted-descending {
		.mod-alignRight {
			&::before {
				@include makeIcon('arrow_full_south');
			}
		}
	}
}

// Fixed columns width
.table {
	&.mod-layoutFixed {
		table-layout: fixed;
	}
	@each $bp-name, $bp-obj in _getMap('breakpoints') {
		@media only screen and (min-width: map-get($bp-obj, breakAt)) {
			&.mod-layoutFixed-#{$bp-name} {
				table-layout: fixed;
			}
		}
	}
}

.table-head-row-cell,
.table-body-row-cell {
	@for $i from _component('table.fixed-column.min-col-width', true) through _component('table.fixed-column.max-col-width', true) {
		&.mod-layoutFixed-#{$i} {
			min-width: $i * 1rem;
			width: $i * 1rem;
			max-width: $i * 1rem;
		}
	}
	@each $bp-name, $bp-obj in _getMap('breakpoints') {
		@media only screen and (min-width: map-get($bp-obj, breakAt)) {
			@for $i from _component('table.fixed-column.min-col-width', true) through _component('table.fixed-column.max-col-width', true) {
				&.mod-layoutFixed-#{$bp-name}#{$i} {
					min-width: $i * 1rem;
					width: $i * 1rem;
					max-width: $i * 1rem;
				}
			}
		}
	}
}

/*****************
* STICKY
******************/
.table {
	//Sticky Columns
	@mixin stickyColumnCommons {
		width: auto;
		min-width: 100%;
		background-color: _color('white');
		.table-head-row-cell,
		.table-body-row-cell {
			&[class*='mod-stickyColumn-'] {
				position: sticky;
				background-color: _color('white');
				z-index: 3;
			}
			//columns sticky css drop shadow on scroll
			&.mod-stickyColumn-shadow {
				z-index: 1;
				width: _component('table.fixed-column.sticky-shadow.width');
				min-width: _component('table.fixed-column.sticky-shadow.width');
				max-width: _component('table.fixed-column.sticky-shadow.width');
				padding: 0;
				background: transparent;
			}
			.stickyColumn-shadow-wrapper {
				display: flex;
			}
		}

		[class*='mod-stickyColumn-left'] .stickyColumn-shadow-wrapper {
			left: calc(#{_component('table.fixed-column.sticky-shadow.width')} * -1);
			&::after {
				background-image: linear-gradient(
					to right,
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 0.75),
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 1)
				);
			}
		}

		[class*='mod-stickyColumn-right'] .stickyColumn-shadow-wrapper {
			right: calc(#{_component('table.fixed-column.sticky-shadow.width')} * -1);
			&::after {
				background-image: linear-gradient(
					to left,
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 0.75),
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 1)
				);
			}
		}

		&[class*='mod-stickyHeader'] {
			//Sticky Header + sticky column
			&[class*='mod-stickyColumn'] {
				.table-head-row-cell {
					&[class*='mod-stickyColumn'] {
						z-index: 6;
						&:not(.mod-stickyColumn-shadow) {
							z-index: 7;
						}
					}
					//shadowMask to fill void in header due to stickyColumn drop shadow tech
					&.mod-columnSticky-shadowMask::before {
						content: '';
						position: absolute;
						left: calc(#{_component('table.fixed-column.sticky-shadow.width')} * -1);
						top: 0;
						bottom: 0;
						z-index: 4;
						width: _component('table.fixed-column.sticky-shadow.width');
						background: _color('white');
					}
					&:not(.mod-columnSticky-shadowMask):not([class*='mod-stickyColumn']) + .mod-columnSticky-shadowMask::before {
						left: auto;
						right: calc(#{_component('table.fixed-column.sticky-shadow.width')} * -1);
					}
				}
			}
		}
	}

	//Sticky commons include, globaly and by BP
	&.mod-stickyColumn {
		@include stickyColumnCommons;
	}

	@each $bp-name, $bp-obj in _getMap('breakpoints') {
		@media only screen and (min-width: map-get($bp-obj, breakAt)) {
			&.mod-stickyColumn-#{$bp-name} {
				@include stickyColumnCommons;
			}
		}
	}

	//Sticky column offset
	&[class*='mod-stickyColumn'] {
		.table-head-row-cell,
		.table-body-row-cell {
			@for $i from 0 through _component('table.sticky-column.max-offset', true) {
				&.mod-stickyColumn-leftOffset#{$i} {
					left: $i * 1rem;
					&.mod-stickyColumn-shadow,
					.stickyColumn-shadow-wrapper::after {
						left: calc(#{$i} * 1rem + #{_component('table.fixed-column.sticky-shadow.width')});
					}
				}
				&.mod-stickyColumn-rightOffset#{$i} {
					right: $i * 1rem;
					&.mod-stickyColumn-shadow,
					.stickyColumn-shadow-wrapper::after {
						right: calc(#{$i} * 1rem + #{_component('table.fixed-column.sticky-shadow.width')});
					}
				}
			}
		}
	}

	//Sticky drop shadow
	[class*='sticky'][class*='shadow-wrapper'] {
		position: absolute;
		top: 0;
		bottom: calc(#{_theme('commons.divider.width')} * -1);
		display: flex;
		width: _component('table.fixed-column.sticky-shadow.width');
		border-bottom: _theme('commons.divider.width') solid _theme('commons.divider.color');
		&::after {
			content: '';
			position: sticky;
			display: block;
			width: _component('table.fixed-column.sticky-shadow.width');
			height: 100%;
			background-color: transparent;
		}
	}

	.mod-stickyColumn-shadow {
		width: 0;
		position: static;
	}

	//Sticky Header
	&[class*='mod-stickyHeader'] {
		.table-head-row-cell {
			background-color: _color('white');
			position: sticky;
			z-index: 5;
		}
		//Sticky header + sticky column at breakpoint
		@each $bp-name, $bp-obj in _getMap('breakpoints') {
			@media only screen and (max-width: map-get($bp-obj, breakAt)) {
				&.mod-stickyColumn-#{$bp-name} .table-head-row-cell {
					left: auto !important;
					right: auto !important;
				}
			}
		}
	}

	//header drop shadow only when sticky
	.mod-stickyHeader-shadow {
		.table-body-row-cell {
			position: sticky;
			top: calc(var(--sticky-header-shadow-offset-top) + #{_component('table.fixed-column.sticky-shadow.width')});
			z-index: 4;
			height: 0;
			padding: 0;
			border: 0;
			background: transparent;
		}
		.stickyHeader-shadow-wrapper {
			top: calc(#{_component('table.fixed-column.sticky-shadow.width')} * -1);
			width: 100%;
			height: 0;
			border: 0;
			&::after {
				top: calc(var(--sticky-header-shadow-offset-top) + #{_component('table.fixed-column.sticky-shadow.width')});
				width: 100%;
				height: _component('table.fixed-column.sticky-shadow.width');
				background-image: linear-gradient(
					to bottom,
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 0.75),
					transparentize(_component('table.fixed-column.sticky-shadow.color', true), 1)
				);
				opacity: 0.5;
			}
		}

		+ .table-body-row .table-body-row-cell {
			border-top: 0;
		}
	}

	&.mod-stickyHeader {
		.table-head-row-cell {
			top: 0;
		}
	}

	&.mod-stickyHeader-withBanner {
		.table-head-row-cell {
			top: _theme('commons.banner-height');
		}
		.mod-stickyHeader-shadow .table-body-row-cell {
			top: calc(
				#{_theme('commons.banner-height')} + var(--sticky-header-shadow-offset-top) + #{_component(
						'table.fixed-column.sticky-shadow.width'
					)}
			);
			.stickyHeader-shadow-wrapper::after {
				top: calc(
					#{_theme('commons.banner-height')} + var(--sticky-header-shadow-offset-top) + #{_component(
							'table.fixed-column.sticky-shadow.width'
						)}
				);
			}
		}
	}
}
