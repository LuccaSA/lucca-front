@mixin field-compact($fieldname) {
	align-items: center;
	margin-bottom: 1rem;
	flex-direction: row;

	.#{$fieldname}-label {
		color: _component("field.compact.label.color");
		font-size: _component("field.compact.label.font-size");
		font-weight: 400;
		flex: 0 0 auto;
		margin-bottom: 0;
		margin-right: _component("field.compact.label.right-margin");
		order: -1;
		width: _component("field.compact.label.sizes.default");
	}

	.#{$fieldname}-messages {
		align-items: center;
		bottom: 0;
		display: inline-flex;
		left: 100%;
		line-height: 1.1;
		margin: 0 0 0 1rem;
		position: absolute;
		top: 0;
		width: 100%;
		max-width: _component("field.compact.label.sizes.default");

		&.mod-helper {
			bottom: auto;
			left: 0;
			max-width: 100%;
			padding-left: calc(#{_component("field.compact.label.sizes.default")} + #{_component("field.compact.label.right-margin")});
			right: 0;
			top: 100%;
		}
	}

	// MODS
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	/* Label Width */

	& {
		@include inputWidth(_component("field.sizes.default"), _component("field.compact.label.sizes.default"));
	}

	@each $input-size-name, $input-width in _getMap("components.field.sizes") {
		&.mod-#{$input-size-name} {
			@include inputWidth($input-width, _component("field.compact.label.sizes.default"));
			@each $label-size-name, $label-width in _getMap("components.field.compact.label.sizes") {
				&.mod-label-#{$label-size-name} {
					@include inputWidth($input-width, $label-width);
				}
			}
		}
	}

	@each $label-size-name, $label-width in _getMap("components.field.sizes") {
		&.mod-label-#{$label-size-name} {
			.#{$fieldname}-label {
				width: $label-width;
			}

			.#{$fieldname}-messages.mod-helper {
				padding-left: calc($label-width + #{_component("field.compact.label.right-margin")});
			}
		}
	}

	/* Display */

	&.mod-block {
		width: 100%;
	}
}

@mixin inputWidth($iWidth, $lWidth) {
	width: calc(#{$iWidth} + #{_component("field.compact.label.right-margin")} + #{$lWidth});
}