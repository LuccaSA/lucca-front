%input_material {
	padding-top: _component("textfield.material.padding-top");

	.textfield-input {
		background-color: transparent;
		border-radius: 0;
		box-shadow: 0 1px 0 0 _component("textfield.material.border.color");
		padding: {
			left: 0;
			right: 0;
		}

		&::placeholder {
			opacity: 0;
		}

		&:focus, &.is-focused {
			&::placeholder {
				opacity: 1;
			}

			~ .textfield-label {
				font-size: _theme("sizes.small.font-size");
				top: 0;
			}
		}
	}

	.textfield-label {
		color: _component("textfield.material.label.color");
		font-size: _component("textfield.material.label.font-size");
		font-weight: 400;
		left: 0;
		line-height: 1.5rem;
		pointer-events: none;
		position: absolute;
		top: 1.5rem;
		width: 100%;
	}

	.textfield-suffix {
		position: absolute;
		right: 0;
		top: calc(#{_component("textfield.material.padding-top")} + #{_component("textfield.input.padding-vertical")});
	}


	// PALETTE
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	// Coloring

	@mixin inputColoring($palette) {
		.textfield-input {
			&:focus, &.is-focused {
				~ .textfield-label {
					color: _color($palette);
				}
			}
		}

		// Needed when textfield label is not next to the textfield-input
		&.is-focused {
			.textfield-label {
				color: _color($palette);
			}
		}
	}

	// default color
	@include inputColoring("textfield.material.default-palette");

	// palette colors
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			@include inputColoring($name);
		}
	}


	// MOD
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	&.mod-small {
		.textfield-label {
			line-height: _theme("sizes.small.line-height");
			font-size: _theme("sizes.small.font-size");
		}
	}


	&.mod-withSuffix {
		.textfield-input {
			padding-right: _component("textfield.material.suffix.padding-right");
		}
	}

	&.mod-noLabel {
		padding-top: 0;

		.textfield-input::placeholder {
			opacity: 1;
		}

		.textfield-label {
			display: none;
		}

		.textfield-suffix {
			top: _component("textfield.input.padding-vertical");
		}
	}

	&.mod-search, &.mod-autocomplete {
		&::after {
			color: _color("text.light");
			bottom: .5rem;
			right: 0;
		}

		.textfield-input {
			padding-right: 1.75rem;
		}

		.textfield-label {
			padding-right: 0;
		}
	}

	&.mod-radio {
		padding-top: 0;
	}

	// STATES
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	// Inline validation
	&.is-loading {

		&::before, &::after {
			bottom: .4rem !important;
			right: 0 !important;
		}
	}

	&.is-valid {
		&::before {
			bottom: .7rem !important;
			right: 0 !important;
		}

		.textfield-label {
			padding-right: 1.5rem;
		}

		.textfield-input {
			padding-right: 1.5rem;
		}
	}

	.textfield-input {
		&.is-filled {
			@include fieldMaterialFilled("textfield");
		}

		&[disabled], &[readonly], &.is-disabled, &.is-readonly {
			background-color: transparent;
			background-image: linear-gradient(to right, _component("textfield.material.border.color") 33%, rgba(255, 255, 255, 0) 0%); // Dashed line
			background-position: bottom;
			background-repeat: repeat-x;
			background-size: 3px 1px;
			box-shadow: none;
		}

		&.is-invalid, &.is-error {
			@include fieldMaterialState("textfield", "error");
		}

		&.is-warning {
			@include fieldMaterialState("textfield", "warning");
		}

		&.is-success {
			@include fieldMaterialState("textfield", "success");
		}
	}

	// Needed when textfield label is not next to the textfield-input
	&.is-focused {
		.textfield-label {
			font-size: _theme("sizes.small.font-size");
			top: 0;
		}
	}
}
