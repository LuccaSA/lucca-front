.radioButtons {
	display: flex;
}

.radioButtons-item {
	margin-left: -1px;

	&:first-child {
		margin-left: 0;

		.radioButtons-item-label {
			border-radius: _theme("commons.border.radius") 0 0 _theme("commons.border.radius");
		}
	}

	&:last-child {
		.radioButtons-item-label {
			border-radius: 0 _theme("commons.border.radius") _theme("commons.border.radius") 0;
		}
	}
}

.radioButtons-item-input {
	@include mask;

	&:checked ~ .radioButtons-item-label {
		z-index: 2;
	}
}

.radioButtons-item-label {
	cursor: pointer;
	display: block;
	overflow: hidden;
	padding: _component("radioButtons.padding");
	position: relative;
	transition: all _theme("commons.animations.durations.fast") ease;
}


// PALETTES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
@mixin radioLabelColoring($palette) {
	color: _color($palette, "800");
	box-shadow: inset 0 0 0 1px _color($palette, "200");

	&:hover {
		background-color: _color($palette, "50");
		box-shadow: inset 0 0 0 1px _color($palette, "200");
	}
}

@mixin radioInputColoring($palette) {

		&:checked ~ .radioButtons-item-label {
			background-color: _color($palette, "50");
			box-shadow: inset 0 0 0 1px _color($palette, "200");
			color: _color($palette, "700");

			&:hover {
				background-color: _color($palette, "100");
				box-shadow: inset 0 0 0 1px _color($palette, "400");
			}

			&:focus {
				box-shadow: 0 0 0 4px _color($palette, "200"), inset 0 0 0 1px _color($palette, "400");
			}
		}

		&:focus ~ .radioButtons-item-label {
			box-shadow: 0 0 0 4px _color($palette, "200"), inset 0 0 0 1px _color($palette, "400");
		}
	
	
}

.radioButtons {
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			.radioButtons-item-label {
				@include radioLabelColoring($name);
			}

			.radioButtons-item-input {
				@include radioInputColoring($name);
			}
		}
	}
}

.radioButtons-item-label {
	// default color
	@include radioLabelColoring("grey");

	// palette colors
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			@include radioLabelColoring($name);
		}
	}
}

.radioButtons-item-input {
	// default color
	@include radioInputColoring("radioButtons.default-palette");

	// palette colors
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			@include radioInputColoring($name);
		}
	}
}

// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.radioButtons {
	&.mod-small {
		.radioButtons-item-label {
			font-size: _component("radioButtons.small.font-size");
			line-height: _component("radioButtons.small.line-height");
			padding: _component("radioButtons.small.padding");
		}
	}
}

// STATES
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.radioButtons-item-input {
	&:disabled ~ .radioButtons-item-label,
	&.is-disabled ~ .radioButtons-item-label {
		color: _color("grey", 500);
	}
	&:checked:disabled ~ .radioButtons-item-label,
	&:checked.is-disabled ~ .radioButtons-item-label {
		background-color: _color("grey", 100);
	}
}