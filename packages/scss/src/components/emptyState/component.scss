@use '@lucca-front/scss/src/commons/config';
@use '@lucca-front/scss/src/commons/utils/media';
@use '@lucca-front/scss/src/commons/utils/namespace';
@use '@lucca-front/scss/src/components/title/exports' as title;

@mixin component($atRoot: namespace.$defaultAtRoot) {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	padding: var(--pr-t-spacings-200);

	@at-root ($atRoot) {
		.emptyState-container {
			align-items: center;
			display: flex;
			flex-grow: 1;
			justify-content: center;
			max-width: var(--components-emptyState-container-maxWidth);
			left: var(--components-emptyState-container-left);
			padding: 0;
			width: 100%;
			position: sticky;

			.container & {
				--components-emptyState-container-maxWidth: none;
				--components-emptyState-container-left: auto;
			}
		}

		.emptyState-content {
			border-radius: var(--commons-borderRadius-L);
			max-width: 100%;
			padding: var(--pr-t-spacings-50);
			width: calc(25rem + var(--pr-t-spacings-50) * 2); // content max width
		}

		.emptyState-content-icon {
			--components-emptyState-icon-background-color: var(--palettes-100, var(--palettes-product-100));
			--components-emptyState-icon-action-color: var(--palettes-600, var(--palettes-brand-600));
		}

		.emptyState-content-text {
			padding-inline: var(--pr-t-spacings-50);
		}

		.emptyState-content-heading {
			@include title.component;
			@include title.h3;

			margin-block-end: var(--pr-t-spacings-50);
			@if config.$deprecatedSpacings {
				margin-block-end: 0;
			}
		}

		.emptyState-content-description {
			margin: 0;
		}

		.emptyState-actions {
			display: flex;
			flex-wrap: wrap;
			align-items: center;
			margin-top: var(--pr-t-spacings-200);
			gap: var(--pr-t-spacings-200);

			.button {
				margin: 0;
			}
		}
	}
}
