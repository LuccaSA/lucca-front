@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/commons/utils/reset';

@mixin component($atRoot: 'without: rule') {
	background-color: var(--palettes-700, var(--palettes-grey-200));
	border-radius: var(--commons-borderRadius-M);
	color: var(--palettes-text, var(--palettes-grey-800));

	display: inline-flex;
	align-items: center;
	gap: var(--spacings-XS);
	position: relative;
	vertical-align: middle;
	padding: calc(var(--spacings-XXS) / 2) var(--spacings-XS);
	font-size: var(--sizes-S-fontSize);
	line-height: var(--sizes-S-lineHeight);

	@at-root ($atRoot) {
		.chip-kill {
			@include reset.button;
			display: grid;
			grid-template-columns: 1fr;
			grid-template-rows: 1fr;
			grid-template-areas: 'main';
			align-items: normal;
			width: var(--components-chip-kill-size);
			height: var(--components-chip-kill-size);
			border-radius: 50% !important;
			cursor: pointer;

			&::before,
			&::after {
				content: '';
				grid-area: main;
			}

			&::before {
				border-radius: 50%;
				background-color: var(--components-chip-kill-disk-color, var(--palettes-grey-700));
			}

			&::after {
				mask-image: var(--components-chip-kill-background-image);
				mask-size: var(--components-chip-kill-size);
				mask-repeat: no-repeat;
				background-color: var(--components-chip-kill-cross-color, var(--colors-white-color));
			}

			&:hover {
				--components-chip-kill-disk-color: var(--palettes-grey-600);
				--components-chip-kill-cross-color: var(--palettes-700, var(--colors-white-color));
			}

			&:focus-visible {
				border-radius: 50%;
				@include a11y.focusVisible();
			}

			&:active {
				--components-chip-kill-disk-color: var(--palettes-50, var(--palettes-grey-800));
			}
		}
	}
}
