@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/a11y';
@use '@lucca-front/scss/src/commons/utils/reset';

@mixin component($atRoot: 'without: rule') {
	background-color: var(--palettes-700, var(--palettes-neutral-200));
	border-radius: var(--commons-borderRadius-M);
	color: var(--palettes-0, var(--palettes-neutral-800));
	display: inline-flex;
	align-items: center;
	gap: var(--pr-t-spacings-100);
	position: relative;
	vertical-align: middle;
	padding: calc(var(--pr-t-spacings-50) / 2) var(--pr-t-spacings-100);
	font-size: var(--components-chip-fontSize);
	line-height: var(--components-chip-lineHeight);

	@at-root ($atRoot) {
		.chip-kill {
			@include reset.button;

			display: grid;
			grid-template-columns: 1fr;
			grid-template-rows: 1fr;
			grid-template-areas: 'main';
			place-items: center;
			width: var(--pr-t-spacings-300);
			height: var(--pr-t-spacings-300);
			margin: calc(var(--pr-t-spacings-75) * -1);
			flex-shrink: 0;
			cursor: pointer;

			&::before,
			&::after {
				content: '';
				grid-area: main;
				width: var(--components-chip-kill-size);
				height: var(--components-chip-kill-size);
			}

			&::before {
				border-radius: var(--commons-borderRadius-full);
				background-color: var(--components-chip-kill-disk-color, var(--palettes-neutral-700));
			}

			&::after {
				mask-image: var(--components-chip-kill-background-image);
				mask-size: var(--components-chip-kill-size);
				mask-repeat: no-repeat;
				background-color: var(--components-chip-kill-cross-color, var(--palettes-neutral-0));
			}

			&:hover {
				--components-chip-kill-disk-color: var(--palettes-neutral-600);
				--components-chip-kill-cross-color: var(--palettes-700, var(--palettes-neutral-0));
			}

			&:focus-visible {
				@include a11y.focusVisible($offset: -4px, $borderRadius: var(--commons-borderRadius-full));
			}

			&:active {
				--components-chip-kill-disk-color: var(--palettes-50, var(--palettes-neutral-800));
			}
		}
	}
}
