@use '../../../../icons/src/mixins' as icon;
@use '../../commons/utils/reset';
@use 'sass:color';

@mixin small {
	font-size: var(--sizes-small-font-size);
	line-height: var(--sizes-small-line-height);
}

@mixin zebra {
	.table-body {
		tr:nth-child(odd) {
			background-color: var(--components-table-zebra-background);
		}
	}
}

@mixin alignTop {
	.table-body-row-cell {
		vertical-align: top;
	}
}

@mixin clickable {
	.table-body-row-cell {
		transition-duration: var(--commons-animations-durations-fast);
		transition-property: background-color;
	}

	.table-body-row-cell-action {
		color: var(--palettes-grey-800);
		text-decoration: none;

		&:hover,
		&:focus {
			text-decoration: underline;
		}
	}

	.table-body-row {
		cursor: pointer;

		&:hover,
		&:focus-within {
			#{$cell} {
				background-color: var(--components-table-hover-background);
			}
		}
	}
}

@mixin card {
	border-top: 0;

	.table-body-row {
		background-color: transparent;

		&:last-child {
			.table-body-row-cell {
				border-bottom: none;
			}
		}
	}

	.table-head-row-cell,
	.table-body-row-cell {
		&:first-child {
			padding-left: var(--components-table-card-padding);
		}

		&:last-child {
			padding-right: var(--components-table-card-padding);
		}
	}
}

@mixin borderless {
	@include noOffset($cell, $headCell);

	border: none;

	.table-head-row-cell,
	.table-body-row-cell {
		border-top: none;
	}
}

@mixin noOffset {
	.table-head-row-cell,
	.table-body-row-cell {
		&:first-child {
			padding-left: 0;
		}

		&:last-child {
			padding-right: 0;
		}
	}
}

@mixin header {
	vertical-align: bottom;
}

@mixin parent {
	.table-body-row-cell {
		color: var(--palettes-grey-800);
		background-color: var(--palettes-grey-100);
		font-size: var(--sizes-small-font-size);
		line-height: var(--sizes-small-line-height);
		font-weight: 600;
	}
}

@mixin collapsable {
	.table-body-row-cell {
		cursor: pointer;
		text-decoration: none;

		&:hover {
			outline: none;
		}

		&:focus-visible,
		&:hover {
			outline: none;
			text-decoration: underline;
		}

		&::before {
			@include icon.makeIcon('arrow_south');

			margin-right: var(--spacings-smaller);
			transition-duration: var(--commons-animations-durations-fast);
			transition-property: transform;
			vertical-align: middle;
		}
	}

	&.is-collapsed {
		.table-body-row-cell {
			&::before {
				transform: rotate(-90deg);
			}
		}
	}
}

@mixin child {
	.table-body-row-cell {
		&:first-child {
			padding-left: var(--spacings-bigger);
		}
	}
}

@mixin draggable {
	.table-body-row-cell-handler {
		top: 0;
		bottom: 0;
		left: 0;
		width: 2rem;
		position: absolute;
		cursor: move;

		&:focus-visible,
		&:hover {
			&::after {
				color: var(--palettes-grey-500);
			}
		}

		&::after {
			@include icon.makeIcon('drag');

			color: var(--palettes-grey-400);
			height: 100%;
			margin: auto;
			display: flex;
			align-items: center;
		}
	}

	[class~='-row-cell'] {
		&:first-child {
			padding-left: 2rem;
			position: relative;
		}
	}
}

@mixin selectable {
	.table-body-row-cell-handler,
	.table-head-row-cell {
		&:first-child {
			padding-right: var(--spacings-smaller);
			width: 1rem;
		}
	}
}

@mixin twoLines {
	@at-root {
		.table-head-row-cell-secondLine {
			margin-top: var(--spacings-smallest);
			display: block;
			font-weight: 400;
		}
	}

	.table-head-row-cell {
		vertical-align: top;
	}

	.table-head-row-cell-wrapper {
		max-width: calc(100% - var(--spacings-big));
		display: inline-block;
		vertical-align: top;
	}

	.table-head-row-cell-secondLine {
		margin-top: var(--spacings-smallest);
		display: block;
		font-weight: 400;
	}
}

@mixin avatar {
	padding-right: 0;
	width: 2rem;
}

@mixin sortable {
	cursor: pointer;

	&::after {
		@include icon.makeIcon('arrow_full_north');

		opacity: 0;
		margin: 0;
		margin-left: var(--spacings-smallest);
		transform: translateY(var(--spacings-smallest));
		transition-duration: var(--commons-animations-durations-fast);
		transition-property: opacity, transform;
	}

	&:focus {
		outline: none;
	}

	&:hover,
	&:focus-visible {
		&::after {
			outline: none;
			transform: translateY(0);
			opacity: 0.5;
		}
	}

	&:is(button) {
		@include reset.button;
	}
}

@mixin sortableSmall {
	&::after {
		margin-top: 0;
	}
}

@mixin sortableAlignRight {
	&::after {
		content: none;
	}

	&::before {
		@include icon.makeIcon('arrow_full_north');

		opacity: 0;
		margin: 0;
		margin-right: var(--spacings-smallest);
		transform: translateY(var(--spacings-smallest));
		transition-duration: var(--commons-animations-durations-fast);
		transition-property: opacity, transform;
	}

	&:focus {
		outline: none;
	}

	&:hover,
	&:focus-visible {
		&::after {
			outline: none;
			transform: translateY(0);
			opacity: 0.5;
		}
	}
}

@mixin actions {
	padding: 0.3rem;
	padding-right: var(--spacings-smaller);
	padding-left: 0;
	transition-duration: var(--commons-animations-durations-fast);
	transition-property: opacity;
	text-align: right;
	white-space: nowrap;

	> * {
		&:not(.is-loading) {
			opacity: 0;
		}
	}

	.table-body-row:hover &,
	.table-head-row:hover &,
	.table-head-row:focus-within &,
	.table-body-row:focus-within & {
		> * {
			opacity: 1;
		}
	}
}

@mixin alignRight {
	text-align: right;
}

@mixin fixed {
	table-layout: fixed;
}

@mixin layoutFixed($i) {
	min-width: $i * 1rem;
	max-width: $i * 1rem;
	width: $i * 1rem;
}

@mixin stickyColumn($shadowColor: #2a3551) {
	width: auto;
	min-width: 100%;
	background-color: var(--colors-white-color);

	.table-body-row-cell,
	.table-head-row-cell {
		&[class*='mod-stickyColumn-'] {
			position: sticky;
			background-color: var(--colors-white-color);
			z-index: 3;
		}

		.mod-stickyColumn-shadow {
			z-index: 1;
			min-width: var(--components-table-fixed-column-sticky-shadow-width);
			max-width: var(--components-table-fixed-column-sticky-shadow-width);
			width: var(--components-table-fixed-column-sticky-shadow-width);
			padding: 0;
			background: transparent;
		}

		.stickyColumn-shadow-wrapper {
			display: flex;
		}
	}

	[class*='mod-stickyColumn-left'] {
		.stickyColumn-shadow-wrapper {
			left: calc(var(--components-table-fixed-column-sticky-shadow-width) * -1);

			&::after {
				background-image: linear-gradient(to right, color.adjust($shadowColor, $alpha: -0.75), color.adjust($shadowColor, $alpha: -1));
			}
		}
	}

	[class*='mod-stickyColumn-right'] {
		.stickyColumn-shadow-wrapper {
			right: calc(var(--components-table-fixed-column-sticky-shadow-width) * -1);

			&::after {
				background-image: linear-gradient(to left, color.adjust($shadowColor, $alpha: -0.75), color.adjust($shadowColor, $alpha: -1));
			}
		}
	}

	&[class*='mod-stickyHeader'] {
		&[class*='mod-stickyColumn'] {
			.table-head-row-cell {
				&[class*='mod-stickyColumn'] {
					z-index: 6;

					&:not(.mod-stickyColumn-shadow) {
						z-index: 7;
					}
				}

				&.mod-columnSticky-shadowMask {
					&::before {
						width: var(--components-table-fixed-column-sticky-shadow-width);
						left: calc(var(--components-table-fixed-column-sticky-shadow-width) * -1);
						background: var(--colors-white-color);
						top: 0;
						bottom: 0;
						z-index: 4;
						position: absolute;
						content: '';
					}
				}

				&:not(.mod-columnSticky-shadowMask) {
					&:not(.mod-stickyColumn-shadow) {
						+ .mod-columnSticky-shadowMask {
							&::before {
								left: auto;
								right: calc(var(--components-table-fixed-column-sticky-shadow-width) * -1);
							}
						}
					}
				}
			}
		}
	}
}

@mixin shadow {
	width: 0;
	position: static;
}

@mixin leftOffset($i) {
	left: $i * 1rem;

	&.mod-stickyColumn-shadow,
	.stickyColumn-shadow-wrapper::after {
		left: calc(#{$i} * 1rem + var(--components-table-fixed-column-sticky-shadow-width));
	}
}

@mixin rightOffset($i) {
	right: $i * 1rem;

	&.mod-stickyColumn-shadow,
	.stickyColumn-shadow-wrapper::after {
		right: calc(#{$i} * 1rem + var(--components-table-fixed-column-sticky-shadow-width));
	}
}

@mixin wrapper {
	bottom: calc(var(--commons-divider-width) * -1);
	width: var(--components-table-fixed-column-sticky-shadow-width);
	border-bottom-width: var(--commons-divider-width);
	border-bottom-color: var(--commons-divider-color);
	border-bottom-style: solid;
	display: flex;
	position: absolute;
	top: 0;

	&::after {
		width: var(--components-table-fixed-column-sticky-shadow-width);
		position: sticky;
		display: block;
		background-color: transparent;
		height: 100%;
		content: '';
	}
}

@mixin stickyHeaderCommon {
	.table-head-row-cell {
		background-color: var(--colors-white-color);
		position: sticky;
		z-index: 5;
	}
}

@mixin stickyColumnBreakpoint {
	.table-head-row-cell {
		left: auto !important;
		right: auto !important;
	}
}

@mixin stickyHeaderShadow($shadowColor: #2a3551) {
	.table-body-row-cell {
		top: calc(var(--sticky-header-shadow-offset-top) + var(--components-table-fixed-column-sticky-shadow-width));
		z-index: 4;
		height: 0;
		padding: 0;
		border: 0;
		position: sticky;
		background: transparent;
	}

	.stickyHeader-shadow-wrapper {
		top: calc(var(--components-table-fixed-column-sticky-shadow-width) * -1);
		width: 100%;
		height: 0;
		border: 0;

		&::after {
			top: calc(var(--sticky-header-shadow-offset-top) + var(--components-table-fixed-column-sticky-shadow-width));
			height: var(--components-table-fixed-column-sticky-shadow-width);
			background-image: linear-gradient(to bottom, color.adjust($shadowColor, $alpha: -0.75), color.adjust($shadowColor, $alpha: -1));
			width: 100%;
			opacity: 0.5;
		}
	}

	+ .table-body-row .table-body-row-cell {
		border-top: 0;
	}
}

@mixin stickyHeader {
	.table-head-row-cell {
		top: 0;
	}
}

@mixin stickyHeaderBanner {
	.table-head-row-cell {
		top: var(commons-banner-height);
	}
	.mod-stickyHeader-shadow {
		.table-body-row-cell {
			top: calc(
				var(commons-banner-height) + var(--sticky-header-shadow-offset-top) + var(--components-table-fixed-column-sticky-shadow-width)
			);

			.stickyHeader-shadow-wrapper {
				&::after {
					top: calc(
						var(commons-banner-height) + var(--sticky-header-shadow-offset-top) + var(--components-table-fixed-column-sticky-shadow-width)
					);
				}
			}
		}
	}
}
