.callout {
	background-color: _component("callout.background");
	border-radius: _theme("commons.border.radius");
	margin: _component("callout.margin");
	padding: _component("callout.padding");
	position: relative;

	a, .link {
		color: inherit;

		&:hover {
			color: inherit;
			opacity: .8;
		}
	}
}

.callout-title {
	font-weight: 600;

	&::after {
		content: " —";
		font-weight: 400;
	}
}

.callout-kill {
	background-color: transparent;
	border: 0;
	color: _color("text.default");
	cursor: pointer;
	height: 1.5rem;
	padding: 0;
	position: absolute;
	right: _theme("spacings.small");
	top: .5rem;
	transition: 150ms background-color ease;
	width: 1rem;

	&::before {
		@include makeIcon("cross");
		font-family: "Lucca icons";
	}

	&:hover {
		opacity: 1;
	}
}

.callout-icon {
	position: absolute;
	top: .4rem;
	left: .75rem;
	width: 2rem;
	margin: auto;
	border-radius: 50%;
	text-align: center;

	.lucca-icon {
		font-size: 1.2rem;
		vertical-align: middle;
	}
}

// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.callout {
	&.mod-icon {
		padding-left: 3rem;
	}

	&.mod-small {
		font-size: _theme("sizes.small.font-size");
		line-height: _theme("sizes.small.line-height");

		&.mod-icon {
			padding-left: 2.8rem;

			.callout-icon {
				top: .4rem;

				.lucca-icon {
					font-size: 1rem;
				}
			}
		}
	}

	&.mod-killable {
		padding-right: 2.5rem;
	}
}

@mixin calloutDefaultPalette($palette) {
	background-color: _color($palette, "see-through");
	color: _color($palette, "dark");

	.callout-icon {
		color: _color($palette);
	}

	.callout-kill {
		color: _color($palette);
	}
}
.callout {
	@each $name, $palette in _getMap("palettes") {
		&.palette-#{$name} {
			@include calloutDefaultPalette($name);
		}
	}
}
