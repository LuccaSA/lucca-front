.callout {
	background: _theme('commons.background.base');
	border-radius: _theme('commons.border.radius');
	margin: _component('callout.margin');
	padding: _component('callout.padding');
	position: relative;

	a:not([class]) {
		color: inherit;

		&:hover {
			color: inherit;
			opacity: 0.8;
		}
	}
}

.callout-title {
	font-weight: 600;

	&::after {
		content: ' —';
		font-weight: 400;
	}
}

.callout-kill {
	background: transparent;
	border: 0;
	color: _color('text.default');
	cursor: pointer;
	height: 1rem;
	opacity: 0.5;
	padding: 0;
	position: absolute;
	right: 0.25rem;
	top: 0.25rem;
	transition: 150ms background ease;
	width: 1rem;

	&::before {
		@include makeIcon('cross');
		font-family: 'Lucca icons';
	}

	&:hover {
		opacity: 1;
	}
}

.callout-icon {
	position: absolute;
	top: calc(1rem - 0.05rem);
	left: 0.75rem;
	width: 2rem;
	margin: auto;
	border-radius: 50%;
	text-align: center;

	.lucca-icon {
		font-size: 1.5rem;
	}
}

// MODS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

.callout {
	&.mod-icon {
		padding-left: 3rem;
	}
}

@mixin calloutDefaultPalette($palette) {
	background: rgba(_get($palette, 'color'), 0.1);
	color: darken(_get($palette, 'color'), 20%);

	.callout-icon {
		color: _get($palette, 'color');
	}

	.callout-kill {
		color: _get($palette, 'color');
	}
}
.callout {
	@each $name, $palette in _palettes() {
		&.palette-#{$name} {
			@include calloutDefaultPalette($palette);
		}
	}
}
