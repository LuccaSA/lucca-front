@use '@lucca-front/icons/src/icon/exports' as icon;

@use '@lucca-front/scss/src/commons/utils/a11y';

@use '@lucca-front/scss/src/components/clear/exports' as clear;
@use '@lucca-front/scss/src/components/chip/exports' as chip;
@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin S {
	--components-multiSelect-fontSize: var(--sizes-S-fontSize);
	--components-multiSelect-lineHeight: var(--sizes-S-lineHeight);
	--components-multiSelect-padding: var(--pr-t-spacings-75);
	--components-multiSelect-gap: var(--pr-t-spacings-75);

	.multipleSelect-arrow {
		@include icon.S;
	}

	.multipleSelect-searchIcon {
		@include icon.S;
	}

	.multipleSelect-clear {
		// :not(.class) is only there to increase specificity when the class isn’t present
		// but the class should be present, and this code is temporary
		&.clear,
		&:not(.clear) {
			@include clear.S;
		}
	}

	.multipleSelect-displayer-chip {
		// :not(.class) is only there to increase specificity when the class isn’t present
		// but the class should be present, and this code is temporary
		&.chip,
		&:not(.chip) {
			@include chip.S;
		}
	}

	.multipleSelect-displayer-numericBadge {
		// :not(.class) is only there to increase specificity when the class isn’t present
		// but the class should be present, and this code is temporary
		&.numericBadge,
		&:not(.numericBadge) {
			@include numericBadge.S;
		}
	}
}

@mixin displayerFilter {
	display: grid;

	.multipleSelect-displayer-filter {
		grid-column-start: 1;
		grid-row-start: 1;
		display: flex;
		gap: var(--pr-t-spacings-50);
		min-inline-size: 0;
	}

	.multipleSelect-displayer-search {
		grid-column-start: 1;
		grid-row-start: 1;
	}
}

@mixin filterPill {
	flex-direction: column;
	align-items: stretch;
	box-shadow: none;
	padding: 0;
	gap: 0;
	width: 21rem;
	max-inline-size: calc(100vw - 2.5rem);

	&:has(.multipleSelect-displayer-search:focus-visible) {
		outline: none;
	}

	.multipleSelect-displayer {
		box-shadow: 0 0 0 1px var(--components-multiSelect-border-color);
		border-radius: var(--commons-borderRadius-M);
		padding: var(--components-multiSelect-padding);
		z-index: 1;
		position: relative;

		&:has(.multipleSelect-displayer-search:focus-visible) {
			@include a11y.focusVisible($offset: 3px);
		}
	}

	.lu-picker-content {
		animation: none;
		box-shadow: none;
		border-radius: 0;
		background-color: transparent;
		padding: var(--pr-t-spacings-50);
		margin: var(--pr-t-spacings-50) calc(var(--pr-t-spacings-100) * -1) calc(var(--pr-t-spacings-100) * -1);

		lu-simple-select-default-option.u-ellipsis {
			white-space: normal !important;
		}
	}
}
