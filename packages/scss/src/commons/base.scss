@use 'sass:map';
@use 'sass:list';

@use '@lucca-front/scss/src/commons/config';

@mixin base {
	@at-root {
		@if config.$fontVariable {
			@font-face {
				font-family: 'Source Sans Pro';
				font-weight: 200 900;
				font-style: normal;
				font-stretch: normal;
				font-display: swap;
				src: url('//cdn.lucca.fr/fonts/SourceSans/SourceSans3VF-Roman.ttf.woff2') format('woff2'),
					url('//cdn.lucca.fr/fonts/SourceSans/SourceSans3VF-Roman.ttf.woff') format('woff'),
					url('//cdn.lucca.fr/fonts/SourceSans/SourceSans3VF-Roman.ttf') format('truetype');
			}
		} @else {
			@import url('//fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600&display=swap');
		}

		*,
		::after,
		::before {
			box-sizing: border-box;
		}

		html {
			height: -webkit-fill-available;
		}

		body {
			background-color: var(--commons-background-base);
			color: var(--palettes-grey-800);
			font-family: var(--commons-font-family);
			font-size: var(--sizes-standard-font-size);
			line-height: var(--sizes-standard-line-height);
			scrollbar-gutter: stable;

			@supports (-webkit-touch-callout: none) {
				min-height: -webkit-fill-available;
			}
		}

		p {
			margin: 0 0 var(--spacings-small);
		}

		abbr {
			&[title] {
				border: none;
				text-decoration: none;
			}
		}

		a {
			color: var(--commons-text-link-color);
			cursor: pointer;
			text-decoration: underline;

			&:hover {
				color: var(--commons-text-link-hover);
			}
		}

		strong,
		b {
			font-weight: 600;
		}

		@each $palette in list.join(config.$palettes, config.$states) {
			.palette-#{$palette} {
				@each $shade in map.keys(config.$primary) {
					--palettes-#{$shade}: var(--palettes-#{$palette}-#{$shade});
				}
			}
		}
	}
}
