@use 'sass:string';
@use 'sass:map';
@use 'sass:math';

@use '@lucca-front/scss/src/commons/config';

// pour tester si le breakpoint existe dans la configuration
// et pour retourner sa valeur convertie en ems (ou false)

@function getBreakpoint($breakpoint) {
	@if map.get(config.$breakpoints, $breakpoint) {
		@return (map.get(config.$breakpoints, $breakpoint) / 16px) * 1em;
	} @else {
		@return false;
	}
}

// les requêtes simples et multiples

@mixin query($breakpoint, $property: 'width', $max: false, $at: 'media', $name: '') {
	$operator: '>=';

	@if $max {
		$operator: '<';
	}

	@if getBreakpoint($breakpoint) {
		$breakpoint: getBreakpoint($breakpoint);
	}

	@#{$at} #{$name} (#{$property} #{$operator} #{$breakpoint}) {
		@content;
	}
}

@mixin queries($breakpoint1, $breakpoint2, $property: 'width', $at: 'media', $name: '') {
	@if getBreakpoint($breakpoint1) {
		$breakpoint1: getBreakpoint($breakpoint1);
	}

	@if getBreakpoint($breakpoint2) {
		$breakpoint2: getBreakpoint($breakpoint2);
	}

	// si le breakpoint2 est plus petit que le breakpoint1, on les inverse
	@if ($breakpoint2 < $breakpoint1) {
		$breakpointTmp: $breakpoint2;
		$breakpoint2: $breakpoint1;
		$breakpoint1: $breakpointTmp;
	}

	@#{$at} #{$name} (#{$breakpoint1} <= #{$property} < #{$breakpoint2}) {
		@content;
	}
}

// les raccourcis vers les requêtes pour min/max/between

@mixin min($breakpoint, $property: 'width', $at: 'media') {
	@include query($breakpoint, $property: $property, $at: $at) {
		@content;
	}
}

@mixin max($breakpoint, $property: 'width', $at: 'media') {
	@include query($breakpoint, $property: $property, $max: true, $at: $at) {
		@content;
	}
}

@mixin between($breakpoint1, $breakpoint2, $property: 'width', $at: 'media') {
	@include queries($breakpoint1, $breakpoint2, $property: $property, $at: $at) {
		@content;
	}
}

// les raccourcis vers les requêtes pour minWidth/maxWidth/betweenWidths

@mixin minWidth($breakpoint, $at: 'media') {
	@include query($breakpoint, $at: $at) {
		@content;
	}
}

@mixin maxWidth($breakpoint, $at: 'media') {
	@include query($breakpoint, $max: true, $at: $at) {
		@content;
	}
}

@mixin betweenWidths($breakpoint1, $breakpoint2, $at: 'media') {
    @include queries($breakpoint1, $breakpoint2, $at: $at) {
        @content;
    }
}

// les raccourcis vers les requêtes pour minHeight/maxHeight/betweenHeights

@mixin minHeight($breakpoint, $at: 'media') {
	@include query($breakpoint, 'height', $at: $at) {
		@content;
	}
}

@mixin maxHeight($breakpoint, $at: 'media') {
	@include query($breakpoint, $max: true, $property: 'height', $at: $at) {
		@content;
	}
}

@mixin betweenHeights($breakpoint1, $breakpoint2, $at: 'media') {
    @include queries($breakpoint1, $breakpoint2, $property: 'height', $at: $at) {
        @content;
    }
}
