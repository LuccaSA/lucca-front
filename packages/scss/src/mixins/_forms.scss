@mixin fieldState($fieldname, $state) {
	background-color: _color($state, "50");

	~ .#{$fieldname}-label, ~ .#{$fieldname}-suffix {
		color: _color($state);
	}

	&::placeholder {
		color: _color($state, "400");
	}

	&:focus {
		&::placeholder {
			color: _color($state, "300");
		}
	}

	&:focus ~ .#{$fieldname}-label, &.is-focused ~ .#{$fieldname}-label {
		color: _color($state);
	}

	&:focus {
		background-color: white;
		box-shadow: 0 0 0 4px _color($state, "200"), 0 0 0 1px _color($state) inset;
	}

	@if ($state == "error") {
		box-shadow: 0 0 0 1px _color($state);
	}
}

@mixin fieldError ($fieldname) {
	@include fieldState($fieldname, "error");
}

@mixin fieldMaterialState($fieldname, $state) {
	&:focus {
		box-shadow: 0 2px 0 0 _color($state);
	}

	@if ($state == "error") {
		box-shadow: 0 2px 0 0 _color($state);
	}

	~ .#{$fieldname}-label {
		color: _color($state);
	}

	&:focus ~ .#{$fieldname}-label {
		color: _color($state);
	}
}

@mixin fieldMaterialError ($fieldname) {
	@include fieldMaterialState($fieldname, "error");
}

@mixin fieldFramedState($state) {
	@if ($state == "error") {
		z-index: 3;
		box-shadow: fakeborderoverlay(_color(#{$state}));
		background-color: _color(#{$state}, "50");
		
		&:focus-within,
		&:hover {
			z-index: 4;
		}
	}

	&.mod-search, &.mod-autocomplete, &.mod-select {
		&::after {
			color: _color(#{$state});
		}
	}

	.radiosfield-label, .checkboxesfield-label, .textfield-label {
		color: _color(#{$state});
	}

	.textfield-input {
		&:hover {
			background-color: _color(#{$state}, "50") !important;
		}

		&:focus {
			background-color: white !important;
			box-shadow: fakeborderoverlay(_color(#{$state})), 0 0 0 4px _color(#{$state}, "50") !important;
		}

		&::placeholder {
			color:  _color(#{$state}, "300");
		}

		@if ($state == "error") {
			background-color: _color(#{$state}, "50") !important;
			box-shadow: fakeborderoverlay(_color(#{$state})) !important;

			&:hover {
				background-color: _color(#{$state}, "100") !important;
			}

			&:focus {
				box-shadow: fakeborderoverlay(_color(#{$state})), 0 0 0 4px _color(#{$state}, "50") !important;
				background-color: white !important;
			}
		}
	}

	&:hover {
		background-color: _color(#{$state}, "50");

		.textfield-messages, .radiosfield-messages, .checkboxesfield-messages {
			transform: translateY(100%);
		}
	}

	&:focus-within {
		background-color: white;
		box-shadow: fakeborderoverlay(_color(#{$state})), 0 0 0 4px _color(#{$state}, "50");

		.textfield-messages, .radiosfield-messages, .checkboxesfield-messages {
			transform: translateY(100%);
		}
	}
}

// legacy
@mixin fieldFramedError($fieldname) {
	background-color: _color("error", "50");

	&::placeholder {
		color: _color("error", "400");
	}

	&:focus {
		&::placeholder {
			color: _color("error", "300");
		}
	}

	&:focus, &:hover {
		box-shadow: fakeborderoverlay(_color("error"));
		background-color: _color("error", "50");
	}

	~ .#{$fieldname}-label, ~ .#{$fieldname}-suffix {
		color: _color("error") !important;
	}

	box-shadow: fakeborderoverlay(_color("error"));
	z-index: 1;
}

@mixin fieldMaterialFilled($fieldname) {
	~ .#{$fieldname}-label {
		font-size: _theme("sizes.small.font-size");
		top: 0;
	}
}

%isRequired {
	color: _color("error");
	content: "*";
	display: inline-block;
	margin-left: .2em;
}
