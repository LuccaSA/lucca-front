@use '@lucca-front/scss/src/components/calendar';
@use '@lucca-front/scss/src/components/calendar/states' as calendarState;

$calendar: 'lu-calendar2';
$row: '.calendar-table-body-row';
$cell: '#{$row}-cell';
$action: '#{$cell}-action';
$start: '#{$cell}.is-start';

@mixin selectBeforeEndTable($event) {
	#{$row} {
		&#{$event} {
			&,
			& ~ #{$row} {
				#{$cell} {
					&#{$event} {
						&::before {
							--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: var(--commons-borderRadius-L) 0 0
								var(--commons-borderRadius-L);
						}

						&,
						& ~ #{$cell} {
							@include calendarState.selected;
						}
					}
				}
			}

			& ~ #{$row} {
				#{$cell} {
					@include calendarState.selected;
				}
			}
		}
	}
}

@mixin selectBeforeStartTable($event) {
	~ #{$calendar}:has(#{$start}) {
		#{$row} {
			&:not(:has(#{$start}) ~ #{$row}) {
				#{$cell} {
					&:not(#{$start} ~ #{$cell}) {
						@include calendarState.selected;
					}

					&#{$start} {
						&::before {
							--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: 0 var(--commons-borderRadius-L)
								var(--commons-borderRadius-L) 0;
							left: 0;
						}
					}
				}
			}
		}
	}
}

@mixin selectBeforeAdjacentTable($event) {
	& ~ #{$calendar} {
		&:not(:has(#{$start}) ~ #{$calendar}, :has(#{$start})) {
			#{$cell} {
				@include calendarState.selected;
			}
		}
	}
}

@mixin selectAfterAdjacentTable($event) {
	#{$row} {
		#{$cell} {
			@include calendarState.selected;

			&#{$event} ~ #{$cell} {
				@include calendarState.unselected;
			}
		}

		&#{$event} ~ #{$row} {
			#{$cell} {
				@include calendarState.unselected;
			}
		}
	}

	&#{$event} ~ #{$calendar} {
		#{$cell} {
			@include calendarState.unselected;
		}
	}

	#{$cell}#{$event} {
		&::before {
			--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: 0 var(--commons-borderRadius-L) var(--commons-borderRadius-L) 0;
		}
	}
}

@mixin selectAfterStartTable($event) {
	#{$start} {
		&,
		~ #{$cell} {
			@include calendarState.selected;
		}
	}

	~ #{$row} {
		#{$cell} {
			@include calendarState.selected;
		}
	}
}

@mixin selectBeforeSameWeek($event) {
	#{$cell}#{$event} {
		&::before {
			--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: var(--commons-borderRadius-L) 0 0 var(--commons-borderRadius-L);
		}
	}

	#{$cell}#{$event},
	#{$cell}#{$event} ~ #{$cell} {
		&:not(#{$start} ~ #{$cell}) {
			@include calendarState.selected;
		}
	}
}

@mixin selectAfterSameWeek($event) {
	#{$start} {
		&,
		& ~ #{$cell} {
			@include calendarState.selected;
		}
	}

	#{$cell}#{$event} {
		&::before {
			--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: 0 var(--commons-borderRadius-L) var(--commons-borderRadius-L) 0;
		}

		& ~ #{$cell} {
			@include calendarState.unselected;
		}
	}
}

@mixin selectBeforeAdjacentWeek($event) {
	#{$cell}#{$event} {
		&::before {
			--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: var(--commons-borderRadius-L) 0 0 var(--commons-borderRadius-L);
		}
	}

	&,
	~ #{$row} {
		&:not(:has(#{$start}) ~ #{$row}) {
			#{$start} {
				&::before {
					left: 0;
					--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: 0 var(--commons-borderRadius-L) var(--commons-borderRadius-L)
						0;
				}
			}

			// sélection de la ligne
			&#{$event} {
				#{$cell}#{$event},
				#{$cell}#{$event} ~ #{$cell} {
					@include calendarState.selected;
				}
			}

			// sélection des lignes adjacentes
			& ~ #{$row} {
				&:not(:has(#{$start}) ~ #{$row}) {
					#{$cell} {
						&:not(#{$start} ~ #{$cell}) {
							@include calendarState.selected;
						}
					}
				}
			}
		}
	}
}

@mixin selectAfterAdjactentWeek($event) {
	// sélection de la ligne
	#{$start},
	#{$start} ~ #{$cell} {
		@include calendarState.selected;
	}

	// sélection des lignes adjacentes
	& ~ #{$row} {
		#{$cell} {
			&#{$event} {
				&::before {
					--components-calendar-table-body-row-cellSelectedBeforeBorderRadius: 0 var(--commons-borderRadius-L) var(--commons-borderRadius-L)
						0;
				}
			}

			@include calendarState.selected;

			&#{$event} ~ #{$cell} {
				@include calendarState.unselected;
			}
		}

		&#{$event} ~ #{$row} {
			#{$cell} {
				@include calendarState.unselected;
			}
		}
	}
}

@mixin selectionInProgressSameMonth($event) {
	#{$row} {
		&:has(#{$start}) {
			&:has(#{$cell}#{$event} ~ #{$start}) {
				@include selectBeforeSameWeek($event);
			}
		}
	}
	#{$row} {
		&:has(#{$start}) {
			&:has(#{$start} ~ #{$event}) {
				@include selectAfterSameWeek($event);
			}
		}
	}

	#{$row} {
		&:has(#{$event}) {
			&:has(~ #{$row} #{$start}) {
				@include selectBeforeAdjacentWeek($event);
			}
		}
	}

	#{$row} {
		&:has(#{$start}) {
			&:has(~ #{$event}) {
				@include selectAfterAdjactentWeek($event);
			}
		}
	}
}

@mixin selectionInProgressBeforeMonth($event) {
	@include selectBeforeStartTable($event);
	@include selectBeforeAdjacentTable($event);
	@include selectBeforeEndTable($event);
}

@mixin selectionInProgressAfterMonth($event) {
	#{$row} {
		&:has(#{$start}) {
			@include selectAfterStartTable($event);
		}
	}
	~ #{$calendar} {
		@include selectAfterAdjacentTable($event);
	}
}

@mixin selectionInProgress($event) {
	#{$calendar} {
		&:has(#{$start}) {
			&:has(~ #{$event}) {
				@include selectionInProgressAfterMonth($event);
			}
		}

		&:has(#{$event}) {
			&:has(~ #{$calendar} #{$start}) {
				@include selectionInProgressBeforeMonth($event);
			}
		}

		&:has(#{$event}) {
			&:has(#{$start}) {
				@include selectionInProgressSameMonth($event);
			}
		}
	}
}

.calendarWrapper.mod-range {
	&:has(#{$start}) {
		&:has(#{$action}:focus-visible) {
			@include selectionInProgress($event: ':focus-within');
		}

		&:not(:has(#{$cell}.is-end)) {
			&:not(:has(#{$cell} #{$cell}-action:focus-visible)) {
				&:has(#{$cell}:not(.is-overflow):hover) {
					@include selectionInProgress($event: ':hover');
				}
			}
		}
	}
}
