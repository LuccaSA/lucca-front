.lu-popup-panel {
	@include elevate(3);
	position: relative;
	background-color: _component("popup.panel.background-color");
	border-radius: _theme("commons.border.radius");
	width: _component("popup.sizes.medium");
	max-width: 95%;
	max-height: 90vh;
	overflow: auto;
	animation: popupAnimation _theme("commons.animations.durations.fast") cubic-bezier(0.25, 0.8, 0.25, 1);

	@each $panel-size, $size-obj in _getMap("components.popup.sizes") {
		&.mod-#{$panel-size}, &.size-#{$panel-size} {
			max-width: none;
			width: _component("popup.sizes."+$panel-size);
		}
	}
}

.lu-modal-panel-inner {
	display: flex;
	flex-flow: column;
	max-height: 90vh;
}

.lu-modal-header {
	padding: _component("popup.padding.vertical") 4rem _component("popup.padding.vertical") _component("popup.padding.horizontal");
	position: relative;
}

.lu-modal-header-title {
	margin: 0;
}

.lu-modal-header-close {
	cursor: pointer;
	background: transparent;
	border: none;
	outline: none;
	padding: .5rem;
	height: 3rem;
	width: 3rem;
	position: absolute;
	right: .6rem;
	top: .6rem;
	border-radius: 50%;
	transition: background _theme("commons.animations.durations.fast") ease;

	.lucca-icon {
		font-size: 1.5rem;
		color: _color("text.default");
	}

	&:hover {
		background-color: _component("button.default-palette.lighter");
	}
}

.lu-modal-content {
	padding: 0 _component("popup.padding.horizontal");
	overflow: auto;
	height: auto;

	// Trick to force Firefox to have a bottom padding
	&:after {
		content: '';
		display: block;
		padding-bottom: _component("popup.padding.vertical");
	}

	&.mod-noPadding {
		padding: 0;

		&:after {
			padding-bottom: 0;
		}
	}
}

.lu-modal-footer {
	border-top: 1px solid _theme("commons.divider.color");
	padding: _theme("spacings.smaller") _theme("spacings.small") _theme("spacings.smaller") _component("popup.padding.horizontal");
	display: flex;
	margin-top: auto;
	align-items: center;
	justify-content: flex-end;
}


@keyframes popupAnimation {
	from {
		transform: scale(.7);
	}

	to {
		transform: none;
	}
}

@keyframes fadeInBackdrop {
	from {
		opacity: 0;
	}
}
