@use '@lucca-front/icons/src/commons/utils/icon';
@use '@lucca-front/scss/src/commons/utils/reset';
@use '@lucca-front/scss/src/components/numericBadge/exports' as numericBadge;

@mixin selectInputStyle {
	:host {
		--components-select-input-padding-horizontal: var(--spacings-XS);
		--components-select-input-padding-vertical: var(--spacings-XS);
		--components-select-framed-color: var(--palettes-grey-500);
		--components-select-framed-color50: var(--palettes-grey-50);
		--components-select-framed-see-through: var(--palettes-grey-50);
		--components-select-framed-text: var(--palettes-grey-800);
		--components-select-framed-placeholder: #cccccc;
		--components-select-framed-side-padding: var(--spacings-S);
		--components-select-framed-top-padding: var(--spacings-L);
		--components-select-framed-bottom-padding: var(--spacings-S);
		--components-select-framed-label-top-offset: var(--spacings-XS);

		cursor: pointer;
		outline: none;
		padding: 0;
		gap: 0;

		&::after {
			@include icon.generate('arrow_chevron_bottom');

			color: var(--palettes-grey-600);
			bottom: var(--components-select-input-padding-vertical);
			font-size: var(--sizes-M-lineHeight);
			line-height: var(--sizes-M-lineHeight);
			pointer-events: none;
			position: absolute;
			right: var(--components-select-input-padding-horizontal);
			transition: transform var(--commons-animations-durations-standard) ease;
		}

		&[disabled], &.is-disabled {
			cursor: not-allowed;
			pointer-events: all;
		}
	}

	.lu-select-display-wrapper {
		display: block;
		text-overflow: ellipsis;
		white-space: nowrap;
		overflow: hidden;
	}

	.lu-select-value {
		line-height: var(--sizes-M-lineHeight);
		min-height: calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));
		padding: var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical)
			var(--components-select-input-padding-horizontal);
		transition: all var(--commons-animations-durations-standard);
		display: none;
	}

	.lu-select-placeholder {
		color: var(--palettes-grey-400);
		line-height: var(--sizes-M-lineHeight);
		min-height: calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));
		padding: var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical)
			var(--components-select-input-padding-horizontal);
		transition: all var(--commons-animations-durations-standard);
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	.lu-select-suffix {
		position: absolute;
		bottom: 0.75rem;
		right: 2.25rem;
	}

	.lu-select-clearer {
		position: absolute;
		bottom: 0.75rem;
		right: 2.25rem;
	}

	::ng-deep .lu-select-value {

		.label {
			padding: var(--spacings-XXS) var(--spacings-XS);
			margin-left: 0;
		}

		.chip {
			vertical-align: baseline;
			max-width: 100%;
			margin: 0 var(--spacings-XXS) var(--spacings-XXS) 0;
			text-overflow: ellipsis;
			overflow: hidden;
			vertical-align: top;
			white-space: nowrap;
		}
	}

	// MODS
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	// Small
	:host-context(.textfield.mod-S) {
		padding: 0;

		.lu-select-value,
		.lu-select-placeholder {
			font-size: var(--sizes-S-fontSize);
			line-height: var(--sizes-XS-lineHeight);
			min-height: calc(var(--components-select-framed-bottom-padding) + var(--sizes-XS-lineHeight));
		}

		.lu-select-clearer {
			bottom: var(--spacings-XS);
		}

		&::after {
			line-height: var(--sizes-XS-lineHeight);
			font-size: var(--sizes-S-lineHeight);
		}

		.lu-select-suffix {
			bottom: 0.5rem;
			right: 2rem;
		}

		::ng-deep .lu-select-value {
			.label {
				// deprecated
				font-size: var(--sizes-S-fontSize);
				line-height: var(--sizes-S-lineHeight);
				font-weight: 600;
				margin: 0;
				padding: 0;
				background-color: transparent;
			}

			.chip {
				height: var(--sizes-XS-lineHeight);
				line-height: var(--sizes-XS-lineHeight);
				font-size: var(--sizes-XS-fontSize);
				padding-left: var(--spacings-XXS);
				padding-right: var(--spacings-XXS);
				gap: var(--spacings-XXS);
			}

			.numericBadge {
				@include numericBadge.S;
			}
		}
	}

	// Framed
	:host-context(.textfield.mod-framed),
	:host-context(.form.mod-framed) {
		&.textfield-input {
			padding: var(--components-select-framed-top-padding) 0 0;

			&::after {
				color: var(--palettes-grey-500);
				bottom: var(--components-select-framed-bottom-padding);
				right: var(--spacings-XS);
			}

			.lu-select-value {
				padding: 0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding)
					var(--components-select-framed-side-padding);
			}

			.lu-select-placeholder {
				color: var(--palettes-grey-400);
				padding: 0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding)
					var(--components-select-framed-side-padding);
			}

			.lu-select-suffix {
				bottom: var(--components-select-framed-bottom-padding);
				right: 1.7rem;
			}
		}
	}

	// Filter
	:host-context(.textfield.mod-filter) {
		.lu-select-value,
		.lu-select-placeholder {
			padding: 0;
			height: auto;
			padding-top: var(--spacings-S);
			color: var(--palettes-grey-800);
		}
	}

	// Material
	:host-context(.textfield.mod-material) {
		&::after {
			color: var(--palettes-grey-500);
			bottom: 0.6rem;
			right: 0;
		}

		.lu-select-value,
		.lu-select-placeholder {
			padding-left: 0;
			padding-right: 0.8rem;
		}

		.lu-select-suffix {
			right: calc(2 * var(--components-select-input-padding-horizontal));
		}

		&.is-select {
			.lu-select-placeholder {
				display: none;
			}
		}

		&.mod-search {
			&::after {
				bottom: 0;
			}

			.lu-select-suffix {
				right: calc(2.75 * var(--components-select-input-padding-horizontal));
			}
		}
	}

	:host-context(.textfield.mod-material .textfield-input.is-focused) {
		.lu-select-placeholder {
			display: none;
		}
	}

	// Multiple
	:host(.mod-multiple) {
		.lu-select-value {
			height: auto;
			align-items: center;
		}

		.lu-select-display-wrapper {
			overflow: visible;
			white-space: normal;
			margin-bottom: calc(var(--spacings-XXS) * -1);
		}
	}

	// Outlined
	:host-context(.textfield.mod-outlined) {
		&.textfield-input {
			&::after {
				color: var(--palettes-grey-600);
			}

			.lu-select-placeholder {
				color: var(--palettes-grey-400);
			}
		}
		// Error
		:host-context(.textfield-input.is-error) {
			&::after {
				color: var(--palettes-error-600);
			}

			.lu-select-placeholder {
				color: var(--palettes-error-400);
			}
		}
	}

	// STATES
	// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

	// Filled
	:host-context(.textfield-input.is-filled) {
		.lu-select-placeholder {
			display: none;
		}

		.lu-select-value {
			display: flex;
			align-items: flex-start;
		}
	}

	// Focused
	:host-context(.textfield .textfield-input.is-focused) {
		&::after {
			transform: rotate(-180deg);
		}
	}

	// Clearable
	:host-context(.textfield-input.is-clearable) {
		.lu-select-value {
			padding-right: 3.5rem;
		}
	}

	// Error
	:host-context(.textfield-input.is-error) {
		&::after {
			color: var(--palettes-error-700);
		}

		.lu-select-placeholder {
			color: var(--palettes-error-400);
		}
	}

	// Disabled
	:host-context(.textfield-input.is-disabled, .textfield-input[disabled]) {
		&::after {
			color: var(--commons-disabled-color);
		}

		.lu-select-placeholder {
			color: var(--commons-disabled-placeholder);
		}
	}
}
